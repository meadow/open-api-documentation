{
  "openapi": "3.0.1",
  "info": {
    "title": "Meadow Open API",
    "description": "The API to connect to the Meadow platform",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api-staging.getmeadow.com"
    },
    {
      "url": "https://api.getmeadow.com"
    }
  ],
  "security": [
    {
      "meadowConsumer": [],
      "meadowClient": []
    }
  ],
  "paths": {
    "/api/v1/compliance-transfers": {
      "get": {
        "description": "Retrieve all incoming transfers from a compliance system (metrc) for an organization in reverse chronological order. 50 transfers will be returned at a time and may be paginated using the `startingAfter` query parameter.",
        "parameters": [
          {
            "name": "startingAfter",
            "in": "query",
            "description": "The `id` for a transfer that you want to retrieve all transfers after this one. Pass in the last `id` in a response to retrieve the next page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List compliance transfers response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of the compliance transfer"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "The ID of the transfer in the compliance system (metrc)"
                    },
                    "type": {
                      "type": "string",
                      "description": "The compliance system this transfer came from"
                    },
                    "manifestNumber": {
                      "type": "string",
                      "description": "The manifest number of the transfer in the compliance system"
                    },
                    "shipperName": {
                      "type": "string",
                      "description": "The name of the shipper",
                      "nullable": true
                    },
                    "shipperLicenseNumber": {
                      "type": "string",
                      "description": "The state license number of the shipper",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "When this transfer was imported into Meadow"
                    },
                    "packages": {
                      "type": "array",
                      "description": "The packages within this transfer",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "The id for this package"
                          },
                          "type": {
                            "type": "string",
                            "description": "The compliance system this package is from"
                          },
                          "externalId": {
                            "type": "string",
                            "description": "The ID of this package in the compliance system",
                            "nullable": true
                          },
                          "externalProductName": {
                            "type": "string",
                            "description": "The name of the product for this package in the compliance system",
                            "nullable": true
                          },
                          "label": {
                            "type": "string",
                            "description": "The unique identifier for this package"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the package.\n\n- `ready` - The package has not been associated with a product in Meadow\n- `received` - Active inventory associated with a product and possibly a product option\n- `finished` - The package has 0 inventory and is not sellable.\n- `shipped` - This package has currently been shipped away from this licensee\n- `transferred` - This package has been sent and is in possession of another licensee\n- `transfer-returned` - This package has been transferred back, but has not been received into inventory yet",
                            "enum": ["ready", "received", "finished", "shipped", "transferred", "transfer-returned"]
                          },
                          "initialAmount": {
                            "type": "string",
                            "description": "The amount this package contained when first transferred"
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of the package from the compliance system"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The datetime this package was created"
                          },
                          "onHold": {
                            "type": "boolean",
                            "description": "Whether this package is currently on administrative hold"
                          },
                          "tradeSample": {
                            "type": "boolean",
                            "description": "Whether this package is a trade sample"
                          },
                          "product": {
                            "type": "object",
                            "description": "The product this package has been associated with in Meadow or `null` if not associated yet",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "The ID of the product"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the product in Meadow"
                              },
                              "unit": {
                                "type": "string",
                                "description": "Either `gram` or `item`"
                              },
                              "strainType": {
                                "type": "string",
                                "description": "",
                                "enum": ["sativa", "indica", "hybrid", "hybrid-sativa", "hybrid-indica", "cbd", "mixed", "none"]
                              },
                              "archivedAt": {
                                "type": "string",
                                "description": "A datetime for when this product was archived or `null` if it is not archived"
                              },
                              "deletedAt": {
                                "type": "string",
                                "description": "A datetime for when this product was deleted or `null` if it is not deleted"
                              }
                            }
                          },
                          "productOption": {
                            "type": "object",
                            "description": "The product option this package has been associated with in Meadow or `null` if not associated with one.",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "The ID of the product option"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the product option in Meadow",
                                "nullable": true
                              },
                              "amount": {
                                "type": "string",
                                "description": "The amount of the underlying unit of this product"
                              },
                              "price": {
                                "type": "string",
                                "description": "The price in cents of this option"
                              },
                              "salesPrice": {
                                "type": "string",
                                "description": "The sales price if one exists",
                                "nullable": true
                              },
                              "upc": {
                                "type": "string",
                                "description": "The UPC code for this option",
                                "nullable": true
                              },
                              "deletedAt": {
                                "type": "string",
                                "description": "A datetime for when this product option was deleted or `null` if it is not deleted"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 2,
                      "externalId": "26264",
                      "type": "metrc",
                      "manifestNumber": "000024264",
                      "shipperName": null,
                      "shipperLicenseNumber": null,
                      "createdAt": "2019-03-05T23:16:40.432Z",
                      "packages": [
                        {
                          "id": 6,
                          "type": "metrc",
                          "externalId": "7432723",
                          "externalProductName": "Blue Dream",
                          "label": "STAGING01234567000000006",
                          "status": "received",
                          "initialAmount": "175",
                          "unit": "Grams",
                          "createdAt": "2019-03-05T23:20:35.943Z",
                          "onHold": false,
                          "tradeSample": false,
                          "product": {
                            "id": 220,
                            "name": "Blue Dream 3.5g",
                            "unit": "gram",
                            "strainType": "indica",
                            "archivedAt": null,
                            "deletedAt": null
                          },
                          "productOption": {
                            "id": 569,
                            "name": "",
                            "amount": 3.5,
                            "price": 3500,
                            "salesPrice": null,
                            "upc": null,
                            "deletedAt": null
                          }
                        },
                        {
                          "id": 8,
                          "type": "metrc",
                          "externalId": "853834",
                          "externalProductName": "Sour Tangie Grams",
                          "label": "STAGING01234567000000008",
                          "status": "received",
                          "initialAmount": "20",
                          "unit": "Each",
                          "createdAt": "2019-03-05T23:23:03.528Z",
                          "onHold": false,
                          "tradeSample": false,
                          "product": {
                            "id": 46,
                            "name": "Sour Tangie",
                            "unit": "gram",
                            "strainType": "sativa",
                            "archivedAt": null,
                            "deletedAt": null
                          },
                          "productOption": {
                            "id": 144,
                            "name": "Eighth",
                            "amount": 3.5,
                            "price": 4500,
                            "salesPrice": null,
                            "upc": null,
                            "deletedAt": null
                          }
                        }
                      ]
                    },
                    {
                      "id": 1,
                      "externalId": "18234",
                      "type": "metrc",
                      "manifestNumber": "000018234",
                      "shipperName": null,
                      "shipperLicenseNumber": null,
                      "createdAt": "2019-03-05T23:16:34.520Z",
                      "packages": [
                        {
                          "id": 1,
                          "type": "metrc",
                          "externalId": "7437437",
                          "externalProductName": "Fire OG",
                          "label": "STAGING01234567000000001",
                          "status": "received",
                          "initialAmount": "175",
                          "unit": "Grams",
                          "createdAt": "2019-03-05T23:18:16.289Z",
                          "onHold": false,
                          "tradeSample": false,
                          "product": {
                            "id": 69,
                            "name": "Fire OG",
                            "unit": "gram",
                            "strainType": "hybrid-sativa",
                            "archivedAt": null,
                            "deletedAt": null
                          },
                          "productOption": {
                            "id": 228,
                            "name": "Eighth",
                            "amount": 3.5,
                            "price": 5000,
                            "salesPrice": null,
                            "upc": "0070330600171",
                            "deletedAt": null
                          }
                        },
                        {
                          "id": 2,
                          "type": "metrc",
                          "externalId": "144743",
                          "externalProductName": "Fire OG",
                          "label": "STAGING01234567000000002",
                          "status": "received",
                          "initialAmount": "175",
                          "unit": "Grams",
                          "createdAt": "2019-03-05T23:18:28.137Z",
                          "onHold": false,
                          "tradeSample": false,
                          "product": {
                            "id": 69,
                            "name": "Fire OG",
                            "unit": "gram",
                            "strainType": "hybrid-sativa",
                            "archivedAt": null,
                            "deletedAt": null
                          },
                          "productOption": {
                            "id": 228,
                            "name": "Eighth",
                            "amount": 3.5,
                            "price": 5000,
                            "salesPrice": null,
                            "upc": "0070330600171",
                            "deletedAt": null
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customer-groups": {
      "get": {
        "description": "Retrieve all customer groups for an organization.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List customer groups response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                },
                "example": {
                  "data": [
                    {
                      "id": 134,
                      "name": "Veterans",
                      "description": null,
                      "createdAt": "2025-04-27T04:17:58.399Z",
                      "updatedAt": "2025-04-27T04:17:58.399Z"
                    },
                    {
                      "id": 133,
                      "name": "Seniors",
                      "description": "All customers over age 65",
                      "createdAt": "2025-04-27T04:17:58.399Z",
                      "updatedAt": "2025-04-27T04:17:58.399Z"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/customer-groups/{customerGroupId}/add-customer": {
      "put": {
        "description": "Add customer to a customer group",
        "parameters": [
          {
            "name": "customerGroupId",
            "in": "path",
            "description": "ID of the customer group to add this customer to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["emailOrPhone"],
                "properties": {
                  "emailOrPhone": {
                    "type": "string",
                    "description": "Either an email address or a phone number of the customer to add to the group",
                  }
                }
              },
              "example": {
                "emailOrPhone": "650-555-1234"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add customer to group response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "example": {
                  "data": {
                    "id": 2987,
                    "hashId": "b6a97e",
                    "firstName": "Perrin",
                    "lastName": "Aybara",
                    "email": "perrin@getmeadow.com",
                    "phone": null,
                    "joinedAt": "2022-09-22T00:13:41.824Z",
                    "updatedAt": "2022-09-22T00:13:41.841Z",
                    "birthday": "1990-11-08",
                    "sex": "male",
                    "zip": "96150",
                    "licenseExpiry": null,
                    "marketingOptIn": false,
                    "marketingOptInAt": null,
                    "customerGroups": [
                      "Veterans"
                    ],
                    "loyalty": {
                      "pointsAmount": 0
                    },
                    "mostRecentAddress": {
                      "street1": "123 Main St",
                      "street2": null,
                      "city": "San Francisco",
                      "state": "California",
                      "postalCode": "94103"
                    },
                    "medicalExpiration": null
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customer-groups/{customerGroupId}/remove-customer": {
      "put": {
        "description": "Remove customer from a customer group",
        "parameters": [
          {
            "name": "customerGroupId",
            "in": "path",
            "description": "ID of the customer group to remove this customer from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["emailOrPhone"],
                "properties": {
                  "emailOrPhone": {
                    "type": "string",
                    "description": "Either an email address or a phone number of the customer to remove from the group",
                  }
                }
              },
              "example": {
                "emailOrPhone": "650-555-1234"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remove customer from group response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "example": {
                  "data": {
                    "id": 2987,
                    "hashId": "b6a97e",
                    "firstName": "Perrin",
                    "lastName": "Aybara",
                    "email": "perrin@getmeadow.com",
                    "phone": null,
                    "joinedAt": "2022-09-22T00:13:41.824Z",
                    "updatedAt": "2022-09-22T00:13:41.841Z",
                    "birthday": "1990-11-08",
                    "sex": "male",
                    "zip": "96150",
                    "licenseExpiry": null,
                    "marketingOptIn": false,
                    "marketingOptInAt": null,
                    "customerGroups": [],
                    "loyalty": {
                      "pointsAmount": 0
                    },
                    "mostRecentAddress": {
                      "street1": "123 Main St",
                      "street2": null,
                      "city": "San Francisco",
                      "state": "California",
                      "postalCode": "94103"
                    },
                    "medicalExpiration": null
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/customers": {
      "get": {
        "description": "Retrieve all customers for an organization in reverse chronological order. 50 customers will be returned at a time and may be paginated using the `startingAfter` query parameter.",
        "parameters": [
          {
            "name": "startingAfter",
            "in": "query",
            "description": "The `id` for a customer that you want to retrieve all customers after this one. Pass in the last `id` in a response to retrieve the next page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startingOn",
            "in": "query",
            "description": "A date that must be formatted as `YYYY-MM-DD`. When submitted, the response will return the latest customer on that day and continue in reverse chronological order. I.E. if `2022-11-25` is passed in, the first customer will be as close to 11:59pm November 25th, 2022 as possible.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Accepts a single value of `updatedAt` if you would like the customers list to be sorted by when each customer was last updated in reverse chronological order (i.e. most recently updated first). Example on how to use: `?sortBy=updatedAt`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["updatedAt"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List customers response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "example": {
                  "data": [
                    {
                      "id": 2982,
                      "hashId": "e35rkb",
                      "firstName": "Perrin",
                      "lastName": "Aybara",
                      "email": null,
                      "phone": null,
                      "joinedAt": "2022-05-05T04:38:22.448Z",
                      "updatedAt": "2023-04-04T20:22:38.491Z",
                      "birthday": "1990-01-01",
                      "sex": "male",
                      "zip": null,
                      "licenseExpiry": "2022-11-13",
                      "marketingOptIn": true,
                      "marketingOptInAt": "2023-02-23T00:10:58.199Z",
                      "customerGroups": ["Industry", "Veterans"],
                      "loyalty": {
                        "pointsAmount": 0
                      },
                      "mostRecentAddress": {
                        "street1": "123 Main St",
                        "street2": null,
                        "city": "San Francisco",
                        "state": "CA",
                        "postalCode": "94103"
                      },
                      "medicalExpiration": "2024-04-20"
                    },
                    {
                      "id": 2981,
                      "hashId": "gkwd5g",
                      "firstName": "Rand",
                      "lastName": "Al'Thor",
                      "email": "rand@getmeadow.com",
                      "phone": "+18145551234",
                      "joinedAt": "2022-05-05T04:37:54.188Z",
                      "updatedAt": "2023-04-04T20:22:38.491Z",
                      "birthday": null,
                      "sex": null,
                      "zip": null,
                      "licenseExpiry": null,
                      "marketingOptIn": false,
                      "marketingOptInAt": null,
                      "customerGroups": [],
                      "loyalty": {
                        "pointsAmount": 143.5
                      },
                      "mostRecentAddress": null,
                      "medicalExpiration": null
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/customers/{customerId}": {
      "get": {
        "description": "Retrieve details for a specific customer via ID",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "ID of customer to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List customer response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                },
                "example": {
                  "data": {
                    "id": 2987,
                    "hashId": "b6a97e",
                    "firstName": "Perrin",
                    "lastName": "Aybara",
                    "email": "perrin@getmeadow.com",
                    "phone": null,
                    "joinedAt": "2022-09-22T00:13:41.824Z",
                    "updatedAt": "2022-09-22T00:13:41.841Z",
                    "birthday": "1990-11-08",
                    "sex": "male",
                    "zip": "96150",
                    "licenseExpiry": null,
                    "marketingOptIn": false,
                    "marketingOptInAt": null,
                    "customerGroups": [
                      "Industry"
                    ],
                    "loyalty": {
                      "pointsAmount": 0
                    },
                    "mostRecentAddress": {
                      "street1": "123 Main St",
                      "street2": null,
                      "city": "San Francisco",
                      "state": "California",
                      "postalCode": "94103"
                    },
                    "medicalExpiration": null
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/orders/{orderId}": {
      "get": {
        "description": "Retrieves the status of the order for that ID",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order status response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the order"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the order. One of `draft`, `new`, `packed`, `fulfilled`, `canceled`\n\n- `draft` is an order submitted without inventory taken out\n- `new` is an order that has had inventory associated with it\n- `packed` signifies an order has been processed and is waiting for pickup/delivery\n- `fulfilled` is an order that has been fully completed\n- `canceled` is an order that has been canceled"
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "18673982",
                    "status": "packed"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/pricing": {
      "post": {
        "description": "Retrieve pricing information for a cart (prices, discounts, taxes, etc.)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type", "lineItems"],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of the order",
                    "enum": ["delivery", "pickup"]
                  },
                  "lineItems": {
                    "type": "array",
                    "description": "An array of products to buy",
                    "items": {
                      "type": "object",
                      "required": ["productOptionId", "quantity"],
                      "properties": {
                        "productOptionId": {
                          "type": "number",
                          "description": "The ID from the [menu api response](/endpoints/menu/list-menu) `data[].options[].id`"
                        },
                        "quantity": {
                          "type": "number",
                          "description": "The quantity of this product option to purchase"
                        }
                      }
                    }
                  },
                  "customer": {
                    "type": "object",
                    "description": "The customer for this order. This object is optional, but if provided, must have a `firstName`, `lastName` and either an `email` or `phone`.",
                    "required": ["firstName", "lastName"],
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "The first name of the customer"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The last name of the customer. Multiple last names may be separated by a space."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email of the customer. At least one of email, phone must be provided."
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone of the customer. At least one of email, phone must be provided."
                      },
                      "birthday": {
                        "type": "string",
                        "description": "The birthday submitted as `YYYY-MM-DD`"
                      }
                    }
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "The postal code for this order. This will take into account an organization’s order minimums"
                  },
                  "deliveryFee": {
                    "type": "number",
                    "description": "A fee that will be passed through and added onto the `customerGrandTotal`"
                  },
                  "deliveryFeeDescription": {
                    "type": "string",
                    "description": "A passthrough title for the delivery fee"
                  }
                }
              },
              "example": {
                "lineItems": [
                  {
                    "productOptionId": 1899,
                    "quantity": 3
                  }
                ],
                "type": "delivery",
                "customer": {
                  "firstName": "Perrin",
                  "lastName": "Aybara",
                  "email": "perrin@getmeadow.com",
                  "phone": "6285551234"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order cart pricing response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "lineItems": {
                      "type": "array",
                      "description": "The line items of this cart",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productOptionId": {
                            "type": "number",
                            "description": "The product option ID for this line item"
                          },
                          "quantity": {
                            "type": "number",
                            "description": "The quantity of this line item"
                          },
                          "unitPrice": {
                            "type": "number",
                            "description": "The unit price for a single quantity of this line item"
                          },
                          "subtotalPrice": {
                            "type": "number",
                            "description": "The total cost of all quantities of this line item before discounts"
                          },
                          "finalPrice": {
                            "type": "number",
                            "description": "The final cost of this line item after discounts"
                          },
                          "discounts": {
                            "type": "array",
                            "description": "An array of automatic discounts applied to this line item (may be empty)",
                            "items": {
                              "type": "object",
                              "properties": {
                                "amountUsed": {
                                  "type": "number",
                                  "description": "The amount of the discount represented in cents."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description of the discount, which may be shown to the customer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalPrice": {
                      "type": "number",
                      "description": "The subtotal price before discounts, credits, adjustments are taken into account."
                    },
                    "netPrice": {
                      "type": "number",
                      "description": "The final price of the order before payment & delivery fees."
                    },
                    "customerGrandTotal": {
                      "type": "number",
                      "description": "The cost of the order that the customer will pay"
                    },
                    "discounts": {
                      "type": "array",
                      "description": "An array of order level discounts",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amountUsed": {
                            "type": "number",
                            "description": "The amount of the discount represented in cents"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the discount, which may be shown to the customer"
                          }
                        }
                      }
                    },
                    "credits": {
                      "type": "array",
                      "description": "An array of credits applied. May be store credit or promo codes attached to the customers account.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amountUsed": {
                            "type": "number",
                            "description": "The amount of the credit used represented in cents"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the credit, which may be shown to the customer"
                          }
                        }
                      }
                    },
                    "adjustments": {
                      "type": "array",
                      "description": "An array of adjustments made to the order. May be a tax exemption or other future Meadow POS behavior.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount of the adjustment represented in cents."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the adjustment, which may be shown to the customer"
                          }
                        }
                      }
                    },
                    "taxes": {
                      "type": "array",
                      "description": "All of the taxes that will be applied if an order is placed with this cart",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount of the tax represented in cents to show to the user"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the tax to show to the user"
                          }
                        }
                      }
                    },
                    "orderMinimum": {
                      "type": "number",
                      "description": "The order minimum for this dispensary and postal code"
                    },
                    "metOrderMinimum": {
                      "type": "boolean",
                      "description": "Whether this cart has met the order minimum or not"
                    },
                    "idempotencyKey": {
                      "type": "string",
                      "description": "A string that should be used when creating an order to ensure idempotency and avoid double orders due to server miscommunication."
                    }
                  }
                },
                "example": {
                  "data": {
                    "lineItems": [
                      {
                        "productOptionId": 1899,
                        "productCategoryId": 1,
                        "quantity": 3,
                        "unitPrice": 6500,
                        "subtotalPrice": 19500,
                        "finalPrice": 19500,
                        "discounts": []
                      },
                      {
                        "productOptionId": 2307,
                        "productCategoryId": 1,
                        "quantity": 1,
                        "unitPrice": 3500,
                        "subtotalPrice": 3500,
                        "finalPrice": 3150,
                        "discounts": [
                          {
                            "id": 166,
                            "type": "percent",
                            "amount": 10,
                            "amountUsed": 350,
                            "description": "10% Off Tuesday Heirloom's"
                          }
                        ]
                      }
                    ],
                    "totalPrice": 22650,
                    "netPrice": 21191,
                    "customerGrandTotal": 21191,
                    "discounts": [
                      {
                        "id": 165,
                        "type": "flat",
                        "amount": 500,
                        "amountUsed": 500,
                        "description": "Tuesday $5"
                      }
                    ],
                    "credits": [
                      {
                        "id": 359,
                        "type": "store-credit",
                        "amountUsed": 500,
                        "description": "Store Credit"
                      }
                    ],
                    "adjustments": [
                      {
                        "amount": -2014,
                        "description": "City Tax Exemption",
                        "isTaxExemption": true,
                        "taxId": 134
                      }
                    ],
                    "taxes": [
                      {
                        "id": 59,
                        "amount": 0,
                        "amountBeforeExemption": 2061,
                        "amountExempted": 2061,
                        "description": "State Sales Tax",
                        "rate": "9.5",
                        "normalRate": "9.5",
                        "included": false,
                        "exemptable": true,
                        "encompass": true,
                        "excludedProductCategoryIds": [],
                        "nonExemptableProductCategoryIds": [
                          7
                        ],
                        "type": "standard"
                      },
                      {
                        "id": 133,
                        "amount": 1555,
                        "amountBeforeExemption": 1555,
                        "amountExempted": 0,
                        "description": "Excise Tax",
                        "rate": "15",
                        "normalRate": "15",
                        "included": false,
                        "exemptable": false,
                        "encompass": false,
                        "excludedProductCategoryIds": [
                          7
                        ],
                        "nonExemptableProductCategoryIds": [],
                        "type": "excise"
                      },
                      {
                        "id": 134,
                        "amount": 0,
                        "amountBeforeExemption": 2014,
                        "amountExempted": 2014,
                        "description": "City Tax (Included)",
                        "rate": "10",
                        "normalRate": "10",
                        "included": true,
                        "exemptable": true,
                        "encompass": false,
                        "excludedProductCategoryIds": [],
                        "nonExemptableProductCategoryIds": [],
                        "type": "standard"
                      }
                    ],
                    "orderMinimum": 5000,
                    "metOrderMinimum": true,
                    "discountsTotal": 850,
                    "discountsOverBudtenderLimit": false,
                    "discountsOverManagerLimit": false,
                    "idempotencyKey": "ddf6cc42-d9b2-4b8c-97cf-47d454445453"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "description": "Retrieve all orders for an organization in reverse chronological order. 50 orders will be returned at a time and may be paginated using the `startingAfter` query parameter.",
        "parameters": [
          {
            "name": "startingAfter",
            "in": "query",
            "description": "The `id` for an order that you want to retrieve all orders after this one. Pass in the last `id` in a response to retrieve the next page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startingOn",
            "in": "query",
            "description": "A date that must be formatted as `YYYY-MM-DD`. When submitted, the response will return the latest order on that day and continue in reverse chronological order. I.E. if `2022-11-25` is passed in, the first order will be as close to 11:59pm November 25th, 2022 as possible.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfilledOnly",
            "in": "query",
            "description": "When passed in as `true`, only fulfilled orders will be returned. The response will be ordered in reverse chronological order of fulfilled date. Also, this will cause `startingOn` to use `fulfilledAt` instead of `createdAt` for determining what orders to return.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Only orders of that type will be returned if this parameter is sent.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["delivery", "pickup", "in-store"]
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Retrieves orders by user. You can get user IDs from [List customers](/endpoints/customers/list-customers) or after [Creating an order](/endpoints/orders/create-order).",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List orders response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "example": {
                  "data": [
                    {
                      "id": "1471684654",
                      "organizationId": 1,
                      "totalPrice": 4000,
                      "netPrice": 3140,
                      "createdAt": "2022-12-15T21:13:14.500Z",
                      "packedAt": null,
                      "fulfilledAt": null,
                      "customerGrandTotal": 3140,
                      "type": "in-store",
                      "source": "web-admin",
                      "status": "new",
                      "cancelationReason": null,
                      "cancelAdminId": null,
                      "canceledAt": null,
                      "taxExempt": true,
                      "refundTotal": 0,
                      "isMedical": false,
                      "customerName": null,
                      "deliveryFee": null,
                      "deliveryFeeDescription": null,
                      "lineItems": [
                        {
                          "id": 1234,
                          "quantity": 1,
                          "productId": 398,
                          "productName": "50 Dose Pen",
                          "productUnit": "item",
                          "productStrainType": "mixed",
                          "optionId": 1112,
                          "optionName": "Calm",
                          "optionAmount": 1,
                          "optionPrice": 4500,
                          "optionSalesPrice": null,
                          "productBrandId": 37,
                          "productBrand": "Dosist",
                          "unitPrice": 4500,
                          "subtotalPrice": 4500,
                          "finalPrice": 4000,
                          "productMovingAverageCostPerUnit": null,
                          "optionMovingAverageCostPerUnit": 25,
                          "packageLineCost": null,
                          "primaryCategory": {
                            "id": 8,
                            "name": "Flowers",
                            "cannabisType": "non-concentrated"
                          },
                          "fulfillAs": [
                            {
                              "pkg": {
                                "unit": "Grams",
                                "label": "1A4FF0300000029000008338",
                                "costPerUnit": "0"
                              },
                              "optionSum": -3,
                              "productOptionId": 1112,
                              "quantityFulfilled": "3"
                            }
                          ],
                          "discounts": [
                            {
                              "discountId": 29,
                              "type": "flat",
                              "amount": 500,
                              "amountUsed": 500,
                              "description": "$ 5 Discount"
                            }
                          ]
                        }
                      ],
                      "payments": [
                        {
                          "id": 1547,
                          "paymentTypeId": 1,
                          "amount": 3140,
                          "finalAmount": 3140,
                          "name": "Cash",
                          "fee": 0,
                          "feePercent": "0",
                          "feeAmount": 0,
                          "feeDescription": null
                        }
                      ],
                      "customer": {},
                      "placedBy": {
                        "id": 1,
                        "email": "rick@getmeadow.com",
                        "firstName": "Rick",
                        "lastName": "Harrison"
                      },
                      "fulfilledBy": {
                        "id": 2983,
                        "email": "rick+1@getmeadow.com",
                        "firstName": "Rick",
                        "lastName": "Harrison"
                      },
                      "adjustments": [
                        {
                          "amount": -327,
                          "description": "City Tax Exemption",
                          "isTaxExemption": true,
                          "taxId": 134
                        }
                      ],
                      "credits": [
                        {
                          "creditId": 361,
                          "type": "store-credit",
                          "amountUsed": 133,
                          "description": "Store credit"
                        }
                      ],
                      "discounts": [
                        {
                          "discountId": 7,
                          "type": "percent",
                          "amount": 10,
                          "amountUsed": 400,
                          "description": "Seniors"
                        }
                      ],
                      "loyaltyRedemptions": [
                        {
                          "type": "cash-back",
                          "description": "2% Cash Back",
                          "pointsRequirement": "1",
                          "pointsAmount": "-500.0",
                          "discountAmount": "2",
                          "amountUsed": 1000,
                          "productOptionId": null
                        }
                      ],
                      "taxes": [
                        {
                          "taxId": 59,
                          "amount": 0,
                          "description": "State Sales Tax",
                          "rate": "9.5",
                          "amountBeforeExemption": 311,
                          "amountExempted": 311,
                          "included": false,
                          "exemptable": true,
                          "tier": "1",
                          "type": "standard",
                          "normalRate": "9.5"
                        },
                        {
                          "taxId": 134,
                          "amount": 0,
                          "description": "City Tax (Included)",
                          "rate": "10",
                          "amountBeforeExemption": 327,
                          "amountExempted": 327,
                          "included": true,
                          "exemptable": true,
                          "tier": "1",
                          "type": "standard",
                          "normalRate": "10"
                        }
                      ],
                      "returns": [
                        {
                          "id": 364,
                          "refundType": "payment-method",
                          "refundInitial": -4500,
                          "refundTotal": -4905,
                          "creditsTotal": 0,
                          "discountsTotal": 0,
                          "adjustmentAmount": 0,
                          "adjustmentDescription": "",
                          "paymentTypeName": "Cash",
                          "loyaltyTotal": 0,
                          "voidedAt": "2023-05-04T20:48:41.508Z",
                          "voidedReason": "void reason here",
                          "createdAt": "2023-05-04T20:34:48.387Z",
                          "lineItems": [
                            {
                              "orderLineItemId": 15368,
                              "type": "return",
                              "inventoryAction": "waste",
                              "quantity": 1,
                              "reason": "Product was defective",
                              "fulfillAs": []
                            }
                          ],
                          "taxes": [
                            {
                              "taxId": 59,
                              "amount": -225,
                              "description": "State Sales Tax",
                              "refunded": true,
                              "rate": "5",
                              "included": false,
                              "exemptable": false,
                              "type": "standard",
                              "tier": "1"
                            },
                            {
                              "taxId": 134,
                              "amount": -180,
                              "description": "City Tax (Included)",
                              "refunded": true,
                              "rate": "10",
                              "included": false,
                              "exemptable": false,
                              "type": "standard",
                              "tier": "1"
                            }
                          ],
                          "createdBy": {
                            "id": 1,
                            "email": "rick@getmeadow.com",
                            "firstName": "Rick",
                            "lastName": "Harrison"
                          },
                          "voidedBy": {
                            "id": 1,
                            "email": "rick@getmeadow.com",
                            "firstName": "Rick",
                            "lastName": "Harrison"
                          }
                        }
                      ],
                      "address": null
                    },
                    {
                      "id": "12352010",
                      "organizationId": 1,
                      "userId": 2987,
                      "totalPrice": 19500,
                      "netPrice": 26319,
                      "createdAt": "2022-09-22T00:16:39.982Z",
                      "packedAt": null,
                      "fulfilledAt": null,
                      "customerGrandTotal": 26819,
                      "type": "delivery",
                      "source": "open-api",
                      "status": "new",
                      "cancelationReason": null,
                      "cancelAdminId": null,
                      "canceledAt": null,
                      "taxExempt": false,
                      "refundTotal": 0,
                      "isMedical": false,
                      "customerName": null,
                      "deliveryFee": 500,
                      "deliveryFeeDescription": "300",
                      "lineItems": [
                        {
                          "id": 36263,
                          "quantity": 3,
                          "productId": 758,
                          "productName": "Kush Minntz",
                          "productUnit": "gram",
                          "productStrainType": "hybrid",
                          "optionId": 1899,
                          "optionName": "Eighth",
                          "optionAmount": 3.54,
                          "optionPrice": 6500,
                          "optionSalesPrice": null,
                          "productBrandId": 226,
                          "productBrand": "Minntz",
                          "unitPrice": 6500,
                          "subtotalPrice": 19500,
                          "finalPrice": 19500,
                          "productMovingAverageCostPerUnit": null,
                          "optionMovingAverageCostPerUnit": 19.198711,
                          "packageLineCost": 15,
                          "primaryCategory": {
                            "id": 8,
                            "name": "Flowers",
                            "cannabisType": "non-concentrated"
                          },
                          "fulfillAs": [],
                          "discounts": []
                        }
                      ],
                      "payments": [
                        {
                          "id": 1548,
                          "paymentTypeId": 1,
                          "amount": 26319,
                          "finalAmount": 26819,
                          "name": "Cash",
                          "fee": 500,
                          "feePercent": "0",
                          "feeAmount": 500,
                          "feeDescription": null
                        }
                      ],
                      "customer": {
                        "id": 2987,
                        "email": "perrin5@getmeadow.com",
                        "firstName": "Perrin",
                        "lastName": "Aybara",
                        "phone": null,
                        "hashId": "b6a97e",
                        "birthday": "2022-11-08",
                        "sex": "male",
                        "zip": "96150",
                        "licenseExpiry": "2022-11-13",
                        "medicalExpiration": "2025-01-03"
                      },
                      "placedBy": {},
                      "fulfilledBy": {},
                      "adjustments": [],
                      "credits": [],
                      "discounts": [],
                      "loyaltyRedemptions": [
                        {
                          "type": "free-product",
                          "description": "Flower",
                          "pointsRequirement": "100",
                          "pointsAmount": "-100.0",
                          "discountAmount": null,
                          "amountUsed": 1500,
                          "productOptionId": 26
                        }
                      ],
                      "taxes": [
                        {
                          "taxId": 59,
                          "amount": 0,
                          "description": "State Sales Tax",
                          "rate": "9.5",
                          "amountBeforeExemption": 350,
                          "amountExempted": 350,
                          "included": false,
                          "exemptable": true,
                          "tier": "1",
                          "type": "standard",
                          "normalRate": "9.5"
                        },
                        {
                          "taxId": 134,
                          "amount": 0,
                          "description": "City Tax (Included)",
                          "rate": "10",
                          "amountBeforeExemption": 368,
                          "amountExempted": 368,
                          "included": true,
                          "exemptable": true,
                          "tier": "1",
                          "type": "standard",
                          "normalRate": "10"
                        }
                      ],
                      "returns": [],
                      "address": {
                        "street1": "123 Main St",
                        "street2": null,
                        "city": "San Francisco",
                        "state": "California",
                        "postalCode": "94103"
                      }
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create an order for a customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type", "lineItems", "customer", "idempotencyKey"],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Order type - must be either `delivery` or `pickup`"
                  },
                  "lineItems": {
                    "type": "array",
                    "description": "An array of products to buy",
                    "items": {
                      "type": "object",
                      "required": ["productOptionId", "quantity"],
                      "properties": {
                        "productOptionId": {
                          "type": "number",
                          "description": "The ID from the [menu api response](/endpoints/menu/list-menu) `data[].options[].id`"
                        },
                        "quantity": {
                          "type": "number",
                          "description": "The quantity of this product option to purchase"
                        }
                      }
                    }
                  },
                  "customer": {
                    "type": "object",
                    "description": "The customer for this order.",
                    "required": ["firstName", "lastName"],
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "The first name of the customer"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The last name of the customer. Multiple last names may be separated by a space."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email of the customer. At least one of email, phone must be provided."
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone of the customer. At least one of email, phone must be provided."
                      },
                      "birthday": {
                        "type": "string",
                        "description": "The birthday submitted as `YYYY-MM-DD`"
                      }
                    }
                  },
                  "address": {
                    "type": "object",
                    "description": "The address of the customer. Required if `type` is set to `delivery`",
                    "required": ["street1", "city", "state", "postalCode"],
                    "properties": {
                      "street1": {
                        "type": "string",
                        "description": ""
                      },
                      "street2": {
                        "type": "string",
                        "description": ""
                      },
                      "city": {
                        "type": "string",
                        "description": ""
                      },
                      "state": {
                        "type": "string",
                        "description": ""
                      },
                      "postalCode": {
                        "type": "string",
                        "description": ""
                      }
                    }
                  },
                  "idempotencyKey": {
                    "type": "string",
                    "description": "Key to help avoid double orders due to server miscommunication. Please see [\"Idempotent Requests\" section](#idempotency). Please use the string provided to you by the [pricing endpoint](/endpoints/orders/retrieve-pricing). This value must be a v4 UUID."
                  },
                  "deliveryNotes": {
                    "type": "string",
                    "description": "Optional notes field to help fulfill the order (Example: please call on delivery)"
                  },
                  "deliveryFee": {
                    "type": "number",
                    "description": "A fee that will be passed through and added onto the `customerGrandTotal`"
                  },
                  "deliveryFeeDescription": {
                    "type": "string",
                    "description": "A passthrough title for the delivery fee"
                  },
                  "discountCodes": {
                    "type": "array",
                    "description": "An array of promo codes to redeem. These codes must already exist in the Meadow backend.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "lineItems": [
                  {
                    "productOptionId": 1899,
                    "quantity": 3
                  }
                ],
                "type": "delivery",
                "address": {
                  "street1": "123 Main St",
                  "city": "San Francisco",
                  "state": "California",
                  "postalCode": "94103"
                },
                "customer": {
                  "firstName": "Perrin",
                  "lastName": "Aybara",
                  "email": "perrin@getmeadow.com"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create order response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID for the order. Used to fetch status updates"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the order. Will be set to `draft` or `new` depending on the organization's settings."
                    },
                    "totalPrice": {
                      "type": "number",
                      "description": "The subtotal price before discounts, credits, adjustments are taken into account."
                    },
                    "netPrice": {
                      "type": "number",
                      "description": "The final price of the order before payment & delivery fees."
                    },
                    "customerGrandTotal": {
                      "type": "number",
                      "description": "The cost of the order that the customer will pay"
                    },
                    "lineItems": {
                      "type": "array",
                      "description": "The line items with pricing information attached",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productOptionId": {
                            "type": "number",
                            "description": "The product option ID for this line item"
                          },
                          "quantity": {
                            "type": "number",
                            "description": "The quantity of this line item"
                          },
                          "unitPrice": {
                            "type": "number",
                            "description": "The unit price for a single quantity of this line item"
                          },
                          "subtotalPrice": {
                            "type": "number",
                            "description": "The total cost of all quantities of this line item before discounts"
                          },
                          "finalPrice": {
                            "type": "number",
                            "description": "The final cost of this line item after discounts"
                          },
                          "discounts": {
                            "type": "array",
                            "description": "An array of automatic discounts applied to this line item (may be empty)",
                            "items": {
                              "type": "object",
                              "properties": {
                                "amountUsed": {
                                  "type": "number",
                                  "description": "The amount of the discount represented in cents."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description of the discount, which may be shown to the customer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "discounts": {
                      "type": "array",
                      "description": "An array of order level discounts",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amountUsed": {
                            "type": "number",
                            "description": "The amount of the discount represented in cents"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the discount, which may be shown to the customer"
                          }
                        }
                      }
                    },
                    "credits": {
                      "type": "array",
                      "description": "An array of credits applied. May be store credit or promo codes attached to the customers account.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amountUsed": {
                            "type": "number",
                            "description": "The amount of the credit used represented in cents"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the credit, which may be shown to the customer"
                          }
                        }
                      }
                    },
                    "adjustments": {
                      "type": "array",
                      "description": "An array of adjustments made to the order. May be a tax exemption or other future Meadow POS behavior.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount of the adjustment represented in cents."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the adjustment, which may be shown to the customer"
                          }
                        }
                      }
                    },
                    "taxes": {
                      "type": "array",
                      "description": "All of the taxes applied to this order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "description": "The amount of the tax represented in cents to show to the user"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the tax to show to the user"
                          }
                        }
                      }
                    },
                    "customer": {
                      "type": "object",
                      "description": "The matched customer for this order",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "The ID of the user in Meadow"
                        },
                        "fullName": {
                          "type": "string",
                          "description": "The full name of the user "
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": "176099362",
                    "organizationId": 1,
                    "totalPrice": 22650,
                    "netPrice": 21191,
                    "deliveryNotes": null,
                    "createdAt": "2022-05-03T20:56:27.830Z",
                    "updatedAt": "2022-05-03T20:56:27.830Z",
                    "customerGrandTotal": 21191,
                    "type": "delivery",
                    "source": "open-api",
                    "status": "draft",
                    "taxExempt": true,
                    "isMedical": false,
                    "idempotencyKey": null,
                    "deliveryFee": null,
                    "deliveryFeeDescription": null,
                    "apiConsumerName": "Meadow Integrator",
                    "credits": [
                      {
                        "id": 342,
                        "creditId": 360,
                        "orderId": "176099362",
                        "type": "store-credit",
                        "amountUsed": 500,
                        "description": "Store Credit",
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "percent": null
                      }
                    ],
                    "lineItems": [
                      {
                        "id": 15258,
                        "orderId": "176099362",
                        "productOptionId": 1899,
                        "quantity": 3,
                        "productId": 758,
                        "productName": "Kush Minntz",
                        "productUnit": "gram",
                        "productStrainType": "hybrid",
                        "optionName": "Eighth",
                        "optionAmount": 3.54,
                        "optionPrice": 6500,
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "productIsFeatured": true,
                        "productCategoryId": 1,
                        "productSubCategoryIds": [],
                        "productBrand": "Minntz",
                        "deletedAt": null,
                        "productUnitPlural": "grams",
                        "unitPrice": 6500,
                        "subtotalPrice": 19500,
                        "finalPrice": 19500,
                        "productBrandId": 226,
                        "optionSalesPrice": null,
                        "discounts": []
                      },
                      {
                        "id": 15259,
                        "orderId": "176099362",
                        "productOptionId": 2307,
                        "quantity": 1,
                        "productId": 994,
                        "productName": "Blue Dream",
                        "productUnit": "gram",
                        "productStrainType": "none",
                        "optionName": "Eighth",
                        "optionAmount": 3.5,
                        "optionPrice": 4000,
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "productIsFeatured": false,
                        "productCategoryId": 1,
                        "productSubCategoryIds": [],
                        "productBrand": "Angora Heirloom",
                        "deletedAt": null,
                        "productUnitPlural": "grams",
                        "unitPrice": 3500,
                        "subtotalPrice": 3500,
                        "finalPrice": 3150,
                        "productBrandId": 330,
                        "optionSalesPrice": 3500,
                        "discounts": [
                          {
                            "id": 1448,
                            "orderId": "176099362",
                            "orderLineItemId": 15259,
                            "discountId": 166,
                            "type": "percent",
                            "amount": 10,
                            "amountUsed": 350,
                            "description": "10% Off Tuesday Heirloom's",
                            "createdAt": "2022-05-03T20:56:27.830Z",
                            "updatedAt": "2022-05-03T20:56:27.830Z",
                            "deletedAt": null,
                            "adminId": null
                          }
                        ]
                      }
                    ],
                    "taxes": [
                      {
                        "id": 15140,
                        "orderId": "176099362",
                        "amount": 0,
                        "description": "State Sales Tax",
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "deletedAt": null,
                        "taxId": 59,
                        "rate": "9.5",
                        "amountBeforeExemption": 2061,
                        "amountExempted": 2061,
                        "included": false,
                        "exemptable": true,
                        "encompass": true,
                        "excludedProductCategoryIds": [],
                        "nonExemptableProductCategoryIds": [
                          7
                        ],
                        "normalRate": "9.5",
                        "type": "standard"
                      },
                      {
                        "id": 15141,
                        "orderId": "176099362",
                        "amount": 1555,
                        "description": "Excise Tax",
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "deletedAt": null,
                        "taxId": 133,
                        "rate": "15",
                        "amountBeforeExemption": 1555,
                        "amountExempted": 0,
                        "included": false,
                        "exemptable": false,
                        "encompass": false,
                        "excludedProductCategoryIds": [
                          7
                        ],
                        "nonExemptableProductCategoryIds": [],
                        "normalRate": "15",
                        "type": "excise"
                      },
                      {
                        "id": 15142,
                        "orderId": "176099362",
                        "amount": 0,
                        "description": "City Tax (Included)",
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "deletedAt": null,
                        "taxId": 134,
                        "rate": "10",
                        "amountBeforeExemption": 2014,
                        "amountExempted": 2014,
                        "included": true,
                        "exemptable": true,
                        "encompass": false,
                        "excludedProductCategoryIds": [],
                        "nonExemptableProductCategoryIds": [],
                        "normalRate": "10",
                        "type": "standard"
                      }
                    ],
                    "discounts": [
                      {
                        "id": 4586,
                        "discountId": 165,
                        "orderId": "176099362",
                        "type": "flat",
                        "amount": 500,
                        "amountUsed": 500,
                        "description": "Tuesday $5",
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "deletedAt": null,
                        "adminId": null
                      }
                    ],
                    "adjustments": [
                      {
                        "id": 1722,
                        "orderId": "176099362",
                        "amount": -2014,
                        "description": "City Tax Exemption",
                        "createdAt": "2022-05-03T20:56:27.830Z",
                        "updatedAt": "2022-05-03T20:56:27.830Z",
                        "deletedAt": null,
                        "isTaxExemption": true,
                        "taxId": 134,
                        "adminId": null
                      }
                    ],
                    "customer": {
                      "id": 18273,
                      "fullName": "Perrin Aybara"
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderId}/detail": {
      "get": {
        "description": "Retrieve information about a specific order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders detail response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                },
                "example": {
                  "data": {
                    "id": "1471684654",
                    "organizationId": 1,
                    "totalPrice": 4000,
                    "netPrice": 3140,
                    "createdAt": "2022-12-15T21:13:14.500Z",
                    "packedAt": null,
                    "fulfilledAt": null,
                    "customerGrandTotal": 3140,
                    "type": "in-store",
                    "source": "web-admin",
                    "status": "new",
                    "cancelationReason": null,
                    "cancelAdminId": null,
                    "canceledAt": null,
                    "taxExempt": true,
                    "refundTotal": 0,
                    "isMedical": false,
                    "customerName": null,
                    "deliveryFee": null,
                    "deliveryFeeDescription": null,
                    "lineItems": [
                      {
                        "id": 1234,
                        "quantity": 1,
                        "productId": 398,
                        "productName": "50 Dose Pen",
                        "productUnit": "item",
                        "productStrainType": "mixed",
                        "optionId": 1112,
                        "optionName": "Calm",
                        "optionAmount": 1,
                        "optionPrice": 4500,
                        "optionSalesPrice": null,
                        "productBrandId": 37,
                        "productBrand": "Dosist",
                        "unitPrice": 4500,
                        "subtotalPrice": 4500,
                        "finalPrice": 4000,
                        "productMovingAverageCostPerUnit": null,
                        "optionMovingAverageCostPerUnit": 25,
                        "packageLineCost": null,
                        "primaryCategory": {
                          "id": 8,
                          "name": "Flowers",
                          "cannabisType": "non-concentrated"
                        },
                        "fulfillAs": [
                          {
                            "pkg": {
                              "unit": "Grams",
                              "label": "1A4FF0300000029000008338",
                              "costPerUnit": "0"
                            },
                            "optionSum": -3,
                            "productOptionId": 1112,
                            "quantityFulfilled": "3"
                          }
                        ],
                        "discounts": [
                          {
                            "discountId": 29,
                            "type": "flat",
                            "amount": 500,
                            "amountUsed": 500,
                            "description": "$ 5 Discount"
                          }
                        ]
                      }
                    ],
                    "payments": [
                      {
                        "id": 1547,
                        "paymentTypeId": 1,
                        "amount": 3140,
                        "finalAmount": 3140,
                        "name": "Cash",
                        "fee": 0,
                        "feePercent": "0",
                        "feeAmount": 0,
                        "feeDescription": null
                      }
                    ],
                    "customer": {},
                    "placedBy": {
                      "id": 1,
                      "email": "rick@getmeadow.com",
                      "firstName": "Rick",
                      "lastName": "Harrison"
                    },
                    "fulfilledBy": {
                      "id": 2983,
                      "email": "rick+1@getmeadow.com",
                      "firstName": "Rick",
                      "lastName": "Harrison"
                    },
                    "adjustments": [
                      {
                        "amount": -327,
                        "description": "City Tax Exemption",
                        "isTaxExemption": true,
                        "taxId": 134
                      }
                    ],
                    "credits": [
                      {
                        "creditId": 361,
                        "type": "store-credit",
                        "amountUsed": 133,
                        "description": "Store credit"
                      }
                    ],
                    "discounts": [
                      {
                        "discountId": 7,
                        "type": "percent",
                        "amount": 10,
                        "amountUsed": 400,
                        "description": "Seniors"
                      }
                    ],
                    "loyaltyRedemptions": [
                      {
                        "type": "cash-back",
                        "description": "2% Cash Back",
                        "pointsRequirement": "1",
                        "pointsAmount": "-500.0",
                        "discountAmount": "2",
                        "amountUsed": 1000,
                        "productOptionId": null
                      }
                    ],
                    "taxes": [
                      {
                        "taxId": 59,
                        "amount": 0,
                        "description": "State Sales Tax",
                        "rate": "9.5",
                        "amountBeforeExemption": 311,
                        "amountExempted": 311,
                        "included": false,
                        "exemptable": true,
                        "tier": "1",
                        "type": "standard",
                        "normalRate": "9.5"
                      },
                      {
                        "taxId": 134,
                        "amount": 0,
                        "description": "City Tax (Included)",
                        "rate": "10",
                        "amountBeforeExemption": 327,
                        "amountExempted": 327,
                        "included": true,
                        "exemptable": true,
                        "tier": "1",
                        "type": "standard",
                        "normalRate": "10"
                      }
                    ],
                    "returns": [
                      {
                        "id": 364,
                        "refundType": "payment-method",
                        "refundInitial": -4500,
                        "refundTotal": -4905,
                        "creditsTotal": 0,
                        "discountsTotal": 0,
                        "adjustmentAmount": 0,
                        "adjustmentDescription": "",
                        "paymentTypeName": "Cash",
                        "loyaltyTotal": 0,
                        "voidedAt": "2023-05-04T20:48:41.508Z",
                        "voidedReason": "void reason here",
                        "createdAt": "2023-05-04T20:34:48.387Z",
                        "lineItems": [
                          {
                            "orderLineItemId": 15368,
                            "type": "return",
                            "inventoryAction": "waste",
                            "quantity": 1,
                            "reason": "Product was defective",
                            "fulfillAs": []
                          }
                        ],
                        "taxes": [
                          {
                            "taxId": 59,
                            "amount": -225,
                            "description": "State Sales Tax",
                            "refunded": true,
                            "rate": "5",
                            "included": false,
                            "exemptable": false,
                            "type": "standard",
                            "tier": "1"
                          },
                          {
                            "taxId": 134,
                            "amount": -180,
                            "description": "City Tax (Included)",
                            "refunded": true,
                            "rate": "10",
                            "included": false,
                            "exemptable": false,
                            "type": "standard",
                            "tier": "1"
                          }
                        ],
                        "createdBy": {
                          "id": 1,
                          "email": "rick@getmeadow.com",
                          "firstName": "Rick",
                          "lastName": "Harrison"
                        },
                        "voidedBy": {
                          "id": 1,
                          "email": "rick@getmeadow.com",
                          "firstName": "Rick",
                          "lastName": "Harrison"
                        }
                      }
                    ],
                    "address": null
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/order-returns": {
      "get": {
        "description": "Retrieve all order returns for an organization in reverse chronological order. 50 order returns will be returned at a time and may be paginated using the `startingAfter` query parameter.",
        "parameters": [
          {
            "name": "startingAfter",
            "in": "query",
            "description": "The `id` for an order return that you want to retrieve all order returns after this one. Pass in the last `id` in a response to retrieve the next page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "voided",
            "in": "query",
            "description": "Pass in `true` if you would like to only receive voided returns. Voided returns are ones that were cancelled and are no longer considered valid.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order return response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderReturn"
                },
                "example": {
                  "data": [
                    {
                      "id": 361,
                      "orderId": "12604007",
                      "refundType": "payment-method",
                      "refundInitial": -5000,
                      "refundTotal": -5541,
                      "creditsTotal": 0,
                      "discountsTotal": 1000,
                      "adjustmentAmount": 0,
                      "adjustmentDescription": "",
                      "paymentTypeName": "Cash",
                      "loyaltyTotal": 0,
                      "voidedAt": null,
                      "voidedReason": null,
                      "createdAt": "2024-01-01T21:26:56.051Z",
                      "lineItems": [
                        {
                          "orderLineItemId": 9769,
                          "type": "return",
                          "inventoryAction": "vendor",
                          "quantity": 1,
                          "reason": "test",
                          "fulfillAs": []
                        }
                      ],
                      "taxes": [
                        {
                          "taxId": 240,
                          "amount": -400,
                          "description": "Local Tax",
                          "refunded": true,
                          "rate": "10",
                          "included": false,
                          "exemptable": false,
                          "type": "standard",
                          "tier": "1"
                        },
                        {
                          "taxId": 241,
                          "amount": -660,
                          "description": "Excise Tax",
                          "refunded": true,
                          "rate": "15",
                          "included": false,
                          "exemptable": false,
                          "type": "california-excise",
                          "tier": "2"
                        },
                        {
                          "taxId": 242,
                          "amount": -481,
                          "description": "State Sales Tax",
                          "refunded": true,
                          "rate": "9.5",
                          "included": false,
                          "exemptable": true,
                          "type": "standard",
                          "tier": "3"
                        }
                      ],
                      "createdBy": {
                        "id": 519,
                        "email": "employee@getmeadow.com",
                        "firstName": "Employee",
                        "lastName": "Name"
                      },
                      "voidedBy": {}
                    },
                    {
                      "id": 360,
                      "orderId": "210919262",
                      "refundType": "payment-method",
                      "refundInitial": -1000,
                      "refundTotal": -1265,
                      "creditsTotal": 0,
                      "discountsTotal": 0,
                      "adjustmentAmount": 0,
                      "adjustmentDescription": "",
                      "paymentTypeName": "Cash",
                      "loyaltyTotal": 0,
                      "voidedAt": null,
                      "voidedReason": null,
                      "createdAt": "2023-09-15T17:01:13.656Z",
                      "lineItems": [
                        {
                          "orderLineItemId": 9123,
                          "type": "exchange",
                          "inventoryAction": "waste",
                          "quantity": 1,
                          "reason": "x",
                          "fulfillAs": [
                            {
                              "optionSum": -1,
                              "quantityFulfilled": "1",
                              "productOptionId": 167,
                              "pkg": {
                                "label": "STAGING01234567000000004",
                                "unit": "Grams"
                              }
                            }
                          ]
                        }
                      ],
                      "taxes": [
                        {
                          "taxId": 240,
                          "amount": -100,
                          "description": "Local Tax",
                          "refunded": true,
                          "rate": "10",
                          "included": false,
                          "exemptable": false,
                          "type": "standard",
                          "tier": "1"
                        },
                        {
                          "taxId": 241,
                          "amount": -165,
                          "description": "Excise Tax",
                          "refunded": true,
                          "rate": "15",
                          "included": false,
                          "exemptable": false,
                          "type": "california-excise",
                          "tier": "2"
                        },
                        {
                          "taxId": 242,
                          "amount": 0,
                          "description": "State Sales Tax",
                          "refunded": true,
                          "rate": "9.5",
                          "included": false,
                          "exemptable": true,
                          "type": "standard",
                          "tier": "3"
                        }
                      ],
                      "createdBy": {
                        "id": 519,
                        "email": "employee@getmeadow.com",
                        "firstName": "Employee",
                        "lastName": "Name"
                      },
                      "voidedBy": {}
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/payment-intents": {
      "post": {
        "description": "Create a payment intent for an order payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["orderPaymentId", "source"],
                "properties": {
                  "orderPaymentId": {
                    "type": "number",
                    "description": "The ID of the order payment to create this intent for"
                  },
                  "source": {
                    "type": "string",
                    "description": "Submit `e-commerce` if this is an online order or `retail` if it is taking place in a store.",
                    "enum": ["e-commerce", "retail"]
                  }
                }
              },
              "example": {
                "orderPaymentId": 90,
                "source": "e-commerce"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create payment intent response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID for the payment intent"
                    },
                    "organizationId": {
                      "type": "number",
                      "description": "The organization ID for this payment intent"
                    },
                    "userId": {
                      "type": "number",
                      "description": "The ID of the user this payment intent was created for"
                    },
                    "paymentIntentId": {
                      "type": "number",
                      "description": "The ID of the payment type for this intent"
                    },
                    "amount": {
                      "type": "number",
                      "description": "The amount of the payment intent before fees in cents"
                    },
                    "feeAmount": {
                      "type": "number",
                      "description": "The amount of the fee in cents"
                    },
                    "strongholdId": {
                      "type": "string",
                      "description": "The ID of the payment object in Stronghold's system"
                    },
                    "strongholdLink": {
                      "type": "string",
                      "description": "The payment link that should be shown to the customer to complete the payment"
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": 39,
                    "organizationId": 1,
                    "userId": 18275,
                    "paymentTypeId": 90,
                    "status": "created",
                    "type": "stronghold",
                    "source": "e-commerce",
                    "amount": 3400,
                    "feeAmount": 119,
                    "strongholdId": "EWQ3DeP8",
                    "strongholdLink": "https://sandbox.strongholdpay.com/l/EWQ3DeP8",
                    "updatedAt": "2025-05-09T21:25:17.153Z",
                    "createdAt": "2025-05-09T21:25:17.153Z"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payment-types": {
      "get": {
        "description": "Retrieve all payment types for an organization.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List payment types response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentType"
                },
                "example": {
                  "data": [
                    {
                      "id": 88,
                      "name": "Cash",
                      "fee": 0,
                      "feeDescription": null,
                      "method": "cash",
                      "feePercent": "0",
                      "createdAt": "2025-04-11T20:34:08.842Z"
                    },
                    {
                      "id": 90,
                      "name": "Debit Card",
                      "fee": 100,
                      "feeDescription": "Debit Card Fee",
                      "method": "debit",
                      "feePercent": "3.5",
                      "createdAt": "2025-05-08T22:42:31.092Z"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/instore-queues": {
      "get": {
        "description": "Retrieve waiting room information for the dispensary.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Instore queue response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "intake": {
                      "$ref": "#/components/schemas/QueueEntry"
                    },
                    "pos": {
                      "$ref": "#/components/schemas/QueueEntry"
                    }
                  }
                },
                "example": {
                  "data": {
                    "intake": [
                      {
                        "id": 2982,
                        "email": "perrin@getmeadow.com",
                        "firstName": "Perrin",
                        "lastName": "Aybara",
                        "phone": null,
                        "hashId": "e35rkb",
                        "birthday": null,
                        "isFirstTime": true
                      }
                    ],
                    "pos": [
                      {
                        "id": 2983,
                        "email": "rand@getmeadow.com",
                        "firstName": "Rand",
                        "lastName": "Al'Thor",
                        "phone": "+18145551234",
                        "hashId": "gn6xpb",
                        "birthday": "1990-01-01",
                        "isFirstTime": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/organization": {
      "get": {
        "description": "Retrieve basic information about the organization",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Organization response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The id for the organization"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the organization"
                    },
                    "customerEmail": {
                      "type": "string",
                      "description": "Customer facing email",
                      "nullable": true
                    },
                    "customerPhone": {
                      "type": "string",
                      "description": "Customer facing phone number",
                      "nullable": true
                    },
                    "hasDelivery": {
                      "type": "boolean",
                      "description": "Whether this organization accepts delivery orders"
                    },
                    "hasPickup": {
                      "type": "boolean",
                      "description": "Whether this organization accepts pickup orders"
                    },
                    "state": {
                      "type": "string",
                      "description": "The state this organization is located in"
                    },
                    "licenseNumber": {
                      "type": "string",
                      "description": "The license number for this organization",
                      "nullable": true
                    },
                    "taxesIncluded": {
                      "type": "boolean",
                      "description": "Whether taxes are included in the price of products"
                    },
                    "tz": {
                      "type": "string",
                      "description": "The timezone name of the organization. This value should be used to adjust UTC times found throughout the API",
                      "enum": ["America/Los_Angeles", "US/Mountain", "US/Central", "US/Eastern"]
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": 1,
                    "name": "Meadow Lands",
                    "customerEmail": "partners@getmeadow.com",
                    "customerPhone": "+14155551234",
                    "hasDelivery": true,
                    "hasPickup": true,
                    "state": "california",
                    "licenseNumber": "C10-0420XYZ-LIC",
                    "taxesIncluded": false,
                    "tz": "America/Los_Angeles"
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/inventory-locations": {
      "get": {
        "description": "Retrieve all of the inventory locations for the organization. These may be cross referenced in other requests when you see `inventoryLocationId`.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Inventory locations response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of the inventory location"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the inventory location"
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the inventory location",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Either `standard` or `vehicle`"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 7,
                      "name": "Retail Floor",
                      "description": "Default inventory location.",
                      "type": "standard"
                    },
                    {
                      "id": 8,
                      "name": "Vault Backstock",
                      "description": "the vault in the back",
                      "type": "standard"
                    },
                    {
                      "id": 10,
                      "name": "Delivery Inventory",
                      "description": "For Delivery Only",
                      "type": "standard"
                    },
                    {
                      "id": 84,
                      "name": "Delivery Ledger Car",
                      "description": null,
                      "type": "vehicle"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/products/all": {
      "get": {
        "description": "Retrieve all product information for both active and inactive products",
        "servers": [
          {
            "url": "https://daffodil-staging.getmeadow.com"
          },
          {
            "url": "https://daffodil.getmeadow.com"
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Products all response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of the product"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product"
                    },
                    "unit": {
                      "type": "string",
                      "description": "Either `gram` or `item`"
                    },
                    "strainType": {
                      "type": "string",
                      "description": "One of `sativa`, `indica`, `hybrid`, `hybrid-sativa`, `hybrid-indica`, `cbd`, `mixed`, or `none`"
                    },
                    "thcAmount": {
                      "type": "string",
                      "description": "The amount of THC in the product",
                      "nullable": true
                    },
                    "thcAmountEach": {
                      "type": "string",
                      "description": "The amount of THC per each of the product",
                      "nullable": true
                    },
                    "thcUnit": {
                      "type": "string",
                      "description": "Either `%` or `mg`",
                      "nullable": true
                    },
                    "cbdAmount": {
                      "type": "string",
                      "description": "The amount of CBD in the product",
                      "nullable": true
                    },
                    "cbdAmountEach": {
                      "type": "string",
                      "description": "The amount of CBD per each of the product",
                      "nullable": true
                    },
                    "cbdUnit": {
                      "type": "string",
                      "description": "Either `%` or `mg`",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "description": "A text description about the product",
                      "nullable": true
                    },
                    "inventoryType": {
                      "type": "string",
                      "description": "Either `option` or `product`. See above for clarification"
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether the product is active on menus or not"
                    },
                    "isFeatured": {
                      "type": "boolean",
                      "description": "Whether the product is featured or not"
                    },
                    "movingAverageCostPerUnit": {
                      "type": "string",
                      "description": "The moving average cost per unit for this product if this products `inventoryType` is product",
                      "nullable": true
                    },
                    "locationInventory": {
                      "type": "array",
                      "description": "The location inventory if this product's `inventoryType` is product",
                      "items": {
                        "type": "object",
                        "properties": {
                          "inventoryLocationId": {
                            "type": "number",
                            "description": "The id for this inventory location"
                          },
                          "amount": {
                            "type": "string",
                            "description": "The amount of inventory for this product"
                          }
                        }
                      }
                    },
                    "options": {
                      "type": "array",
                      "description": "All of the pricing options for a product",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "The ID of this option"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of this option",
                            "nullable": true
                          },
                          "amount": {
                            "type": "number",
                            "description": "The amount of the underlying unit of this product"
                          },
                          "price": {
                            "type": "number",
                            "description": "The price in cents of this option"
                          },
                          "salesPrice": {
                            "type": "number",
                            "description": "The sales price in cents if one exists",
                            "nullable": true
                          },
                          "upc": {
                            "type": "string",
                            "description": "The UPC code for this option",
                            "nullable": true
                          },
                          "movingAverageCostPerUnit": {
                            "type": "string",
                            "description": "The moving average cost per unit for this product option",
                            "nullable": true
                          },
                          "locationInventory": {
                            "type": "array",
                            "description": "The inventory by location for this product option. Will only have values if the product's `inventoryType` is set to `option`",
                            "items": {
                              "type": "object",
                              "properties": {
                                "inventoryLocationId": {
                                  "type": "number",
                                  "description": "The id for this inventory location"
                                },
                                "amount": {
                                  "type": "string",
                                  "description": "The amount of inventory for this option"
                                },
                                "maxQuantity": {
                                  "type": "number",
                                  "description": "The maximum quantity of this product option that is purchasable"
                                }
                              }
                            }
                          },
                        }
                      }
                    },
                    "photos": {
                      "type": "array",
                      "description": "All of the photos for a product",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fullPath": {
                            "type": "string",
                            "description": "The URL to use to display the photo"
                          }
                        }
                      }
                    },
                    "primaryCategory": {
                      "type": "object",
                      "description": "The primary category of the product",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the primary category"
                        }
                      }
                    },
                    "brand": {
                      "type": "object",
                      "description": "The brand of the product",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the brand"
                        }
                      }
                    },
                    "subCategories": {
                      "type": "array",
                      "description": "The sub-categories for the product",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the sub-category"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Additional information regarding products for this organization",
                      "properties": {
                        "categories": {
                          "type": "array",
                          "description": "All of the primary categories for this organization",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the category"
                              },
                              "order": {
                                "type": "number",
                                "description": "The organization can determine what order they would like the categories to be displayed to the customer, starting with 0"
                              }
                            }
                          }
                        },
                        "inventoryLocations": {
                          "type": "array",
                          "description": "All the inventory locations for this dispensary",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "The id for this location. This can be used to match up with `locationInventory[].inventoryLocationId` elsewhere in the response"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the inventory location"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 516,
                      "organizationId": 1,
                      "name": "3C Farms Strawberry Fields",
                      "unit": "gram",
                      "strainType": "sativa",
                      "strainName": "3C Farms Strawberry Fields",
                      "percentThc": null,
                      "percentCbd": null,
                      "thcAmount": null,
                      "thcAmountEach": null,
                      "thcUnit": null,
                      "cbdAmount": null,
                      "cbdAmountEach": null,
                      "cbdUnit": null,
                      "description": "",
                      "createdAt": "2019-04-29T19:01:12.770Z",
                      "isActive": false,
                      "isFeatured": false,
                      "archivedAt": null,
                      "inventoryType": "option",
                      "unitPlural": "grams",
                      "movingAverageCostPerUnit": null,
                      "isCompliant": false,
                      "options": [
                        {
                          "id": 1432,
                          "productId": 516,
                          "name": "Gram",
                          "amount": 1,
                          "price": 1500,
                          "salesPrice": null,
                          "createdAt": "2019-04-29T12:01:12.786-07:00",
                          "upc": null,
                          "content": "1",
                          "movingAverageCostPerUnit": "43.090909",
                          "locationInventory": [
                            {
                              "inventoryLocationId": 10,
                              "amount": "110",
                              "maxQuantity": 110
                            }
                          ]
                        },
                        {
                          "id": 1433,
                          "productId": 516,
                          "name": "Eighth",
                          "amount": 3.5,
                          "price": 3500,
                          "salesPrice": null,
                          "createdAt": "2019-04-29T12:01:12.787-07:00",
                          "upc": null,
                          "content": "3.5",
                          "movingAverageCostPerUnit": "14.642858",
                          "locationInventory": [
                            {
                              "inventoryLocationId": 7,
                              "amount": "50",
                              "maxQuantity": 50
                            },
                            {
                              "inventoryLocationId": 8,
                              "amount": "85",
                              "maxQuantity": 85
                            },
                            {
                              "inventoryLocationId": 10,
                              "amount": "0",
                              "maxQuantity": 0
                            }
                          ]
                        }
                      ],
                      "photos": [],
                      "productGroups": [],
                      "primaryCategory": {
                        "id": 1,
                        "name": "Flowers",
                        "order": 0,
                        "cannabisType": "non-concentrated"
                      },
                      "brand": {
                        "id": 2,
                        "name": "3C Farms"
                      },
                      "locationInventory": [],
                      "subCategories": [
                        {
                          "id": 45,
                          "name": "Top Shelf"
                        }
                      ]
                    },
                    {
                      "id": 770,
                      "organizationId": 1,
                      "name": "1:3 Releaf Soak",
                      "unit": "item",
                      "strainType": "sativa",
                      "strainName": "",
                      "percentThc": null,
                      "percentCbd": null,
                      "thcAmount": "100",
                      "thcAmountEach": null,
                      "thcUnit": "mg",
                      "cbdAmount": "300",
                      "cbdAmountEach": null,
                      "cbdUnit": "mg",
                      "description": "This slow-release patch sticks to skin, offering pain relief through transdermal delivery of full-spectrum cannabinoids. With a quick and easy single application, you get up to 12 hours of relief for your whole body. This product has the potential for some intoxicating effects. Find the ratio that works best for your specific needs: the patch comes in several options from THC-rich to CBD-exclusive.\n\nAvailable individually, each patch has 30mg cannabinoids.\n\n",
                      "createdAt": "2020-03-24T22:07:00.005Z",
                      "isActive": false,
                      "isFeatured": false,
                      "archivedAt": null,
                      "inventoryType": "option",
                      "unitPlural": "items",
                      "movingAverageCostPerUnit": null,
                      "isCompliant": false,
                      "options": [
                        {
                          "id": 1936,
                          "productId": 770,
                          "name": "",
                          "amount": 1,
                          "price": 3000,
                          "salesPrice": null,
                          "createdAt": "2020-03-24T15:07:00.023-07:00",
                          "upc": null,
                          "content": "100",
                          "movingAverageCostPerUnit": null,
                          "locationInventory": []
                        }
                      ],
                      "photos": [
                        {
                          "id": 409,
                          "productId": 770,
                          "path": "2020/8/8115fb84-304d-456b-90bb-5feafd3aae7f.jpeg",
                          "createdAt": "2020-09-15T21:13:35.917Z",
                          "format": null,
                          "fullPath": "https://meadow-staging.imgix.net/2020/8/8115fb84-304d-456b-90bb-5feafd3aae7f.jpeg?auto=format,compress&cs=csrgb&fit=max&h=640&w=640"
                        }
                      ],
                      "productGroups": [],
                      "primaryCategory": {
                        "id": 5,
                        "name": "Topicals",
                        "order": 5,
                        "cannabisType": "concentrated"
                      },
                      "brand": {
                        "id": 111,
                        "name": "Papa & Barkley"
                      },
                      "locationInventory": [],
                      "subCategories": []
                    }
                  ],
                  "meta": {
                    "categories": [
                      {
                        "id": 1,
                        "name": "Flowers",
                        "order": 0,
                        "cannabisType": "non-concentrated"
                      },
                      {
                        "id": 56,
                        "name": "Vape",
                        "order": 1,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 2,
                        "name": "Pre-Rolls",
                        "order": 2,
                        "cannabisType": "non-concentrated"
                      },
                      {
                        "id": 4,
                        "name": "Concentrates",
                        "order": 3,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 3,
                        "name": "Edibles",
                        "order": 4,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 5,
                        "name": "Topicals",
                        "order": 5,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 17,
                        "name": "Clones",
                        "order": 6,
                        "cannabisType": "immature-plant"
                      },
                      {
                        "id": 7,
                        "name": "Accessories",
                        "order": 7,
                        "cannabisType": "none"
                      },
                      {
                        "id": 138,
                        "name": "Meadow Select",
                        "order": 8,
                        "cannabisType": "none"
                      },
                      {
                        "id": 6,
                        "name": "Seeds",
                        "order": 9,
                        "cannabisType": "none"
                      }
                    ],
                    "inventoryLocations": [
                      {
                        "id": 7,
                        "name": "Retail Floor"
                      },
                      {
                        "id": 8,
                        "name": "Vault Backstock"
                      },
                      {
                        "id": 10,
                        "name": "Delivery Inventory"
                      },
                      {
                        "id": 62,
                        "name": "Display"
                      },
                      {
                        "id": 69,
                        "name": "Car 1"
                      },
                      {
                        "id": 70,
                        "name": "Car 2"
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/purchase-orders": {
      "get": {
        "description": "Retrieve all purchase orders for an organization in reverse chronological order. 50 purchase orders will be returned at a time and may be paginated using the `startingAfter` query parameter.",
        "parameters": [
          {
            "name": "startingAfter",
            "in": "query",
            "description": "The `id` for a purchase order that you want to retrieve all purchase orders after this one. Pass in the last `id` in a response to retrieve the next page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List purchase orders response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of the purchase order"
                    },
                    "status": {
                      "type": "string",
                      "description": "Either `open` or `closed`"
                    },
                    "notes": {
                      "type": "string",
                      "description": "User entered notes for this purchase order",
                      "nullable": true
                    },
                    "expectedAt": {
                      "type": "string",
                      "description": "A date for when this purchase order is expected in `YYYY-MM-DD`"
                    },
                    "paymentStatus": {
                      "type": "string",
                      "description": "Either `paid`, `unpaid`, or `partial`"
                    },
                    "paymentTerms": {
                      "type": "string",
                      "description": "One of `net15`, `net30`, `net60`, `cod` or `custom`"
                    },
                    "paymentTermsDueDate": {
                      "type": "string",
                      "description": "The payment terms due date"
                    },
                    "totalAmount": {
                      "type": "string",
                      "description": "The total amount (quantity) of product on this purchase order"
                    },
                    "totalAmountReceived": {
                      "type": "string",
                      "description": "The total amount (quantity) of product received on this purchase order"
                    },
                    "subtotal": {
                      "type": "number",
                      "description": "The subtotal of the purchase order in cents"
                    },
                    "finalTotal": {
                      "type": "number",
                      "description": "The final total of the purchase order in cents"
                    },
                    "caExciseTotal": {
                      "type": "number",
                      "description": "The number for pre-2023 California excise of this purchase order in cents"
                    },
                    "shippingHandlingFee": {
                      "type": "number",
                      "description": "The shipping fee in cents"
                    },
                    "shippingHandlingFeeExcise": {
                      "type": "number",
                      "description": "The number for pre-2023 California excise of the shipping and handling fee"
                    },
                    "amountPaid": {
                      "type": "number",
                      "description": "The amount paid for this purchase order in cents"
                    },
                    "amountOustanding": {
                      "type": "number",
                      "description": "The amount still left to be paid in cents"
                    },
                    "externalInvoiceNumber": {
                      "type": "string",
                      "description": "The external invoice number",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "When this purchase order was created"
                    },
                    "vendor": {
                      "type": "object",
                      "nullable": true,
                      "description": "Information about the loyalty of the customer (Can be `null`)",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "The id for this vendor"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of this vendor"
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone for this vendor"
                        },
                        "notes": {
                          "type": "string",
                          "description": "User entered notes about this vendor"
                        },
                        "email": {
                          "type": "string",
                          "description": "The email of this vendor"
                        },
                        "sellerPermitNumber": {
                          "type": "string",
                          "description": "The license number for this vendor"
                        },
                        "street1": {
                          "type": "string",
                          "description": ""
                        },
                        "street2": {
                          "type": "string",
                          "description": ""
                        },
                        "city": {
                          "type": "string",
                          "description": ""
                        },
                        "state": {
                          "type": "string",
                          "description": ""
                        },
                        "postalCode": {
                          "type": "string",
                          "description": ""
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "When this vendor was created"
                        }
                      }
                    },
                    "lineItems": {
                      "type": "array",
                      "description": "All of the line items for this purchase order",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "The id of this line item"
                          },
                          "amount": {
                            "type": "string",
                            "description": "The amount (quantity) for the product in this line item"
                          },
                          "costPerUnit": {
                            "type": "string",
                            "description": "The cost for each amount of this line item in dollars"
                          },
                          "subtotal": {
                            "type": "number",
                            "description": "The subtotal for this line item in cents"
                          },
                          "finalTotal": {
                            "type": "number",
                            "description": "The final total for this line item in cents"
                          },
                          "amountReceived": {
                            "type": "string",
                            "description": "The amount that has been received thus far"
                          },
                          "caExcisePerUnit": {
                            "type": "string",
                            "description": "The amount of pre-2023 California excise tax per unit in dollars"
                          },
                          "caExciseTotal": {
                            "type": "number",
                            "description": "The total amount of pre-2023 California excise tax for this line item in cents"
                          },
                          "receptions": {
                            "type": "array",
                            "description": "All of the receptions for this purchase order line item",
                            "items": {
                              "type": "object",
                              "properties": {
                                "inventoryLocationId": {
                                  "type": "number",
                                  "description": "The id of the inventory location where this inventory was received"
                                },
                                "amount": {
                                  "type": "string",
                                  "description": "The amount (quantity) of the reception"
                                },
                                "createdAt": {
                                  "type": "string",
                                  "description": "When this reception was created"
                                }
                              }
                            }
                          },
                          "product": {
                            "type": "object",
                            "description": "The product that this line item is for",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "The ID of the product"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the product"
                              },
                              "unit": {
                                "type": "string",
                                "description": "Either `gram` or `item`"
                              },
                              "strainType": {
                                "type": "string",
                                "description": "The strain type of the product"
                              },
                              "primaryCategory": {
                                "type": "object",
                                "description": "The category for this product",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "ID of the category"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the category"
                                  },
                                  "cannabisType": {
                                    "type": "string",
                                    "description": "One of the following values:\n`non-concentrated` - Flower or other non-concentrated THC products\n`concentrated` - Concentrated THC products (Example: Edibles, Concentrates)\n`immature-plant` - Cannabis plants\n`none` - This product does not contain cannabis\n`mi-infused-solids` - Cannabis infused solids (only in Michigan) (Example: edibles)\n`mi-infused-fluids` - Cannabis infused fluids (only in Michigan) (Example: drinks)\n`edibles` - Edible product (only used in New Jersey & Massachusetts)"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 642,
                      "status": "open",
                      "notes": "test notes",
                      "expectedAt": "2024-01-25",
                      "paymentStatus": "unpaid",
                      "paymentTerms": "custom",
                      "paymentTermsDueDate": "2024-02-02",
                      "totalAmount": "45",
                      "totalAmountReceived": "50",
                      "subtotal": 37700,
                      "finalTotal": 38000,
                      "caExciseTotal": 0,
                      "shippingHandlingFee": 300,
                      "shippingHandlingFeeExcise": 0,
                      "amountPaid": 0,
                      "amountOutstanding": 38000,
                      "externalInvoiceNumber": "123456",
                      "createdAt": "2024-01-24T00:29:39.641Z",
                      "vendor": {
                        "id": 3,
                        "name": "Emerald Green 420 Distributors",
                        "phone": "",
                        "notes": "On time distributor",
                        "email": "",
                        "sellerPermitNumber": "420247123",
                        "street1": "420 Main Street",
                        "street2": null,
                        "city": "San Francisco",
                        "state": "CA",
                        "postalCode": "94103",
                        "createdAt": "2017-02-20T11:29:03.882-08:00"
                      },
                      "lineItems": [
                        {
                          "id": 1037,
                          "amount": "7",
                          "costPerUnit": "5.00",
                          "subtotal": 3500,
                          "amountReceived": "50",
                          "finalTotal": 3500,
                          "caExcisePerUnit": "0",
                          "caExciseTotal": 0,
                          "createdAt": "2024-01-24T00:29:39.656Z",
                          "receptions": [
                            {
                              "inventoryLocationId": 88,
                              "amount": "50",
                              "createdAt": "2024-01-24T00:30:47.181Z"
                            }
                          ],
                          "product": {
                            "id": 675,
                            "name": "#Lunchbreak",
                            "unit": "gram",
                            "strainType": "sativa",
                            "createdAt": "2019-07-17T17:14:58.523Z",
                            "primaryCategory": {
                              "id": 8,
                              "name": "Flowers",
                              "cannabisType": "non-concentrated",
                              "createdAt": "2016-04-02T08:03:27.028Z"
                            }
                          }
                        },
                        {
                          "id": 1038,
                          "amount": "38",
                          "costPerUnit": "9.00",
                          "subtotal": 34200,
                          "amountReceived": "0",
                          "finalTotal": 34200,
                          "caExcisePerUnit": "0",
                          "caExciseTotal": 0,
                          "createdAt": "2024-01-24T00:29:39.656Z",
                          "receptions": [],
                          "product": {
                            "id": 9759,
                            "name": "41 Unicornz",
                            "unit": "item",
                            "strainType": "sativa",
                            "createdAt": "2023-10-02T18:33:52.134Z",
                            "primaryCategory": {
                              "id": 253,
                              "name": "Vapes",
                              "cannabisType": "concentrated",
                              "createdAt": "2023-04-14T21:25:36.473Z"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "id": 641,
                      "status": "open",
                      "notes": null,
                      "expectedAt": null,
                      "paymentStatus": "unpaid",
                      "paymentTerms": null,
                      "paymentTermsDueDate": null,
                      "totalAmount": "1",
                      "totalAmountReceived": "0",
                      "subtotal": 100,
                      "finalTotal": 100,
                      "caExciseTotal": 0,
                      "shippingHandlingFee": 0,
                      "shippingHandlingFeeExcise": 0,
                      "amountPaid": 0,
                      "amountOutstanding": 100,
                      "externalInvoiceNumber": null,
                      "createdAt": "2024-01-10T22:38:48.857Z",
                      "vendor": null,
                      "lineItems": [
                        {
                          "id": 1036,
                          "amount": "1",
                          "costPerUnit": "1.00",
                          "subtotal": 100,
                          "amountReceived": "0",
                          "finalTotal": 100,
                          "caExcisePerUnit": "0",
                          "caExciseTotal": 0,
                          "createdAt": "2024-01-10T22:38:48.864Z",
                          "receptions": [],
                          "product": {
                            "id": 10039,
                            "name": "Blue Dream",
                            "unit": "gram",
                            "strainType": "sativa",
                            "createdAt": "2024-01-10T22:38:00.373Z",
                            "primaryCategory": {
                              "id": 8,
                              "name": "Flowers",
                              "cannabisType": "non-concentrated",
                              "createdAt": "2016-04-02T08:03:27.028Z"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a purchase order in order to receive inventory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["lineItems"],
                "properties": {
                  "notes": {
                    "type": "string",
                    "description": "Any relevant notes"
                  },
                  "paymentTerms": {
                    "type": "string",
                    "enum": ["net15", "net30", "net60", "cod", "custom"],
                  },
                  "paymentTermsDueDate": {
                    "type": "string",
                    "description": "If payment terms is custom then this field is required. Date formatted as `YYYY-MM-DD` for when payment is due."
                  },
                  "expectedAt": {
                    "type": "string",
                    "description": "Expected delivery date formatted as `YYYY-MM-DD`"
                  },
                  "externalInvoiceNumber": {
                    "type": "string",
                    "description": "Use this to store a 3rd party ID for the PO"
                  },
                  "inventoryVendorId": {
                    "type": "number",
                    "description": "The inventory vendor ID obtained from list or create PO. Alternatively you can use `inventoryVendor.name`"
                  },
                  "inventoryVendor": {
                    "type": "object",
                    "required": ["name"],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name of the vendor. We will match to an existing vendor or create with the below properties if it does not exist."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email for this vendor"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone for this vendor"
                      },
                      "sellerPermitNumber": {
                        "type": "string",
                        "description": ""
                      },
                      "notes": {
                        "type": "string",
                        "description": ""
                      },
                      "street1": {
                        "type": "string",
                        "description": ""
                      },
                      "street2": {
                        "type": "string",
                        "description": ""
                      },
                      "postalCode": {
                        "type": "string",
                        "description": ""
                      },
                      "city": {
                        "type": "string",
                        "description": ""
                      },
                      "state": {
                        "type": "string",
                        "description": ""
                      }
                    }
                  },
                  "lineItems": {
                    "type": "array",
                    "description": "The products for this purchase order",
                    "items": {
                      "type": "object",
                      "required": ["productId", "amount", "costPerUnit"],
                      "properties": {
                        "productId": {
                          "type": "number",
                          "description": "The ID of the product to add to the purchase order"
                        },
                        "productOptionId": {
                          "type": "number",
                          "description": "The ID of the option that belongs to the product submitted as `productId`. This property is required if the product's `inventoryType` is set to `option`.\n\nView more information in our [Inventory Guide](/guides/inventory)"
                        },
                        "amount": {
                          "type": "string",
                          "description": "The number of units purchased. Submit as string to avoid floating point errors."
                        },
                        "costPerUnit": {
                          "type": "string",
                          "description": "The cost per unit in dollars. Submit as string to avoid floating point errors."
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "lineItems": [{
                  "productId": 11867,
                  "productOptionId": 15472,
                  "amount": "35",
                  "costPerUnit": "20.35"
                }],
                "inventoryVendor": {
                  "name": "Awesome Distribution, Inc."
                },
                "expectedAt": "2024-12-25"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create product response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/purchase-orders/{purchaseOrderId}": {
      "put": {
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "ID of the purchase order to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "description": "Any relevant notes"
                  },
                  "paymentTerms": {
                    "type": "string",
                    "enum": ["net15", "net30", "net60", "cod", "custom"],
                  },
                  "paymentTermsDueDate": {
                    "type": "string",
                    "description": "If payment terms is custom then this field is required. Date formatted as `YYYY-MM-DD` for when payment is due."
                  },
                  "expectedAt": {
                    "type": "string",
                    "description": "Expected delivery date formatted as `YYYY-MM-DD`"
                  },
                  "externalInvoiceNumber": {
                    "type": "string",
                    "description": "Use this to store a 3rd party ID for the PO"
                  },
                  "inventoryVendorId": {
                    "type": "number",
                    "description": "The inventory vendor ID obtained from list or create PO. Alternatively you can use `inventoryVendor.name`"
                  },
                  "inventoryVendor": {
                    "type": "object",
                    "required": ["name"],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name of the vendor. We will match to an existing vendor or create with the below properties if it does not exist."
                      },
                      "email": {
                        "type": "string",
                        "description": "The email for this vendor"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The phone for this vendor"
                      },
                      "sellerPermitNumber": {
                        "type": "string",
                        "description": ""
                      },
                      "notes": {
                        "type": "string",
                        "description": ""
                      },
                      "street1": {
                        "type": "string",
                        "description": ""
                      },
                      "street2": {
                        "type": "string",
                        "description": ""
                      },
                      "postalCode": {
                        "type": "string",
                        "description": ""
                      },
                      "city": {
                        "type": "string",
                        "description": ""
                      },
                      "state": {
                        "type": "string",
                        "description": ""
                      }
                    }
                  },
                  "lineItems": {
                    "type": "array",
                    "description": "The products for this purchase order, This endpoint will update/delete/create ALL of the line items for this purchase order. For that reason, any existing line items you would like to keep must have the id property submitted. Any existing line items, which are not submitted with this endpoint will be deleted.",
                    "items": {
                      "type": "object",
                      "required": ["productId", "amount", "costPerUnit"],
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "If updating an existing line item pass the line item ID from the create, update or list purchase order endpoints."
                        },
                        "productId": {
                          "type": "number",
                          "description": "The ID of the product to add to the purchase order"
                        },
                        "productOptionId": {
                          "type": "number",
                          "description": "The ID of the option that belongs to the product submitted as `productId`. This property is required if the product's `inventoryType` is set to `option`.\n\nView more information in our [Inventory Guide](/guides/inventory)"
                        },
                        "amount": {
                          "type": "string",
                          "description": "The number of units purchased. Submit as string to avoid floating point errors."
                        },
                        "costPerUnit": {
                          "type": "string",
                          "description": "The cost per unit in dollars. Submit as string to avoid floating point errors."
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "lineItems": [{
                  "productId": 11867,
                  "productOptionId": 15472,
                  "amount": "35",
                  "costPerUnit": "20.35"
                }],
                "inventoryVendor": {
                  "name": "Awesome Distribution, Inc."
                },
                "expectedAt": "2024-12-25"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update product response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrderResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/menu": {
      "get": {
        "description": "Fetch the menu for an organization",
        "servers": [
          {
            "url": "https://daffodil-staging.getmeadow.com"
          },
          {
            "url": "https://daffodil.getmeadow.com"
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Request a menu for one of three types: `delivery`, `pickup` or `in-store`. If `type` is not passed in, the menu for `delivery` will be returned.\n\nEach Meadow client essentially has three different menus. If you intend to support an order flow for more than one type, you should pull each menu by sending in this parameter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Menu response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of the product"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the product"
                    },
                    "unit": {
                      "type": "string",
                      "description": "Either `gram` or `item`"
                    },
                    "strainType": {
                      "type": "string",
                      "description": "One of `sativa`, `indica`, `hybrid`, `hybrid-sativa`, `hybrid-indica`, `cbd`, `mixed`, or `none`"
                    },
                    "thcAmount": {
                      "type": "string",
                      "description": "The amount of THC in the product",
                      "nullable": true
                    },
                    "thcAmountEach": {
                      "type": "string",
                      "description": "The amount of THC per each of the product",
                      "nullable": true
                    },
                    "thcUnit": {
                      "type": "string",
                      "description": "Either `%` or `mg`",
                      "nullable": true
                    },
                    "cbdAmount": {
                      "type": "string",
                      "description": "The amount of CBD in the product",
                      "nullable": true
                    },
                    "cbdAmountEach": {
                      "type": "string",
                      "description": "The amount of CBD per each of the product",
                      "nullable": true
                    },
                    "cbdUnit": {
                      "type": "string",
                      "description": "Either `%` or `mg`",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "description": "A text description about the product",
                      "nullable": true
                    },
                    "isFeatured": {
                      "type": "boolean",
                      "description": "Whether the product is featured or not"
                    },
                    "inStock": {
                      "type": "boolean",
                      "description": "Whether there is at least one option of this product in stock currently"
                    },
                    "options": {
                      "type": "array",
                      "description": "All of the pricing options for a product",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "The ID of this product option. This value will be used for placing orders"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of this option",
                            "nullable": true
                          },
                          "amount": {
                            "type": "number",
                            "description": " The amount of the underlying unit of this product"
                          },
                          "price": {
                            "type": "number",
                            "description": "The price in cents of this option"
                          },
                          "salesPrice": {
                            "type": "number",
                            "description": "The sales price if one exists",
                            "nullable": true
                          },
                          "upc": {
                            "type": "string",
                            "description": "The UPC code for this option",
                            "nullable": true
                          },
                          "maxQuantity": {
                            "type": "number",
                            "description": "The maximum number that is purchaseable based on current inventory"
                          }
                        }
                      }
                    },
                    "photos": {
                      "type": "array",
                      "description": "Array of the photos for a product",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fullPath": {
                            "type": "string",
                            "description": "The URL to use to display the photo"
                          }
                        }
                      }
                    },
                    "primaryCategory": {
                      "type": "object",
                      "description": "The primary category of the product",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the primary category"
                        }
                      }
                    },
                    "brand": {
                      "type": "object",
                      "description": "The brand of the product",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the brand"
                        }
                      }
                    },
                    "subCategories": {
                      "type": "array",
                      "description": "Array of the sub-categories for the product",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the sub-category"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 398,
                      "organizationId": 1,
                      "name": "Blue Dream Pre-roll",
                      "unit": "item",
                      "strainType": "sativa",
                      "strainName": "",
                      "percentThc": "",
                      "percentCbd": "",
                      "thcAmount": null,
                      "thcAmountEach": null,
                      "thcUnit": null,
                      "cbdAmount": null,
                      "cbdAmountEach": null,
                      "cbdUnit": null,
                      "description": "",
                      "createdAt": "2018-09-16T17:22:10.145Z",
                      "isActive": true,
                      "isFeatured": false,
                      "archivedAt": null,
                      "inventoryType": "option",
                      "unitPlural": "items",
                      "isCompliant": false,
                      "options": [
                        {
                          "id": 1114,
                          "productId": 398,
                          "name": "Bliss",
                          "amount": 1,
                          "price": 5000,
                          "salesPrice": null,
                          "createdAt": "2018-09-16T10:22:10.173-07:00",
                          "upc": null,
                          "content": "112.5",
                          "maxQuantity": 0
                        },
                        {
                          "id": 1110,
                          "productId": 398,
                          "name": "Arouse",
                          "amount": 1,
                          "price": 5000,
                          "salesPrice": null,
                          "createdAt": "2018-09-16T10:22:10.173-07:00",
                          "upc": null,
                          "content": "112.5",
                          "maxQuantity": 50
                        },
                        {
                          "id": 1112,
                          "productId": 398,
                          "name": "Calm",
                          "amount": 1,
                          "price": 4500,
                          "salesPrice": null,
                          "createdAt": "2018-09-16T10:22:10.173-07:00",
                          "upc": null,
                          "content": "112.5",
                          "maxQuantity": 49
                        },
                        {
                          "id": 1113,
                          "productId": 398,
                          "name": "Sleep",
                          "amount": 1,
                          "price": 5000,
                          "salesPrice": null,
                          "createdAt": "2018-09-16T10:22:10.173-07:00",
                          "upc": null,
                          "content": "112.5",
                          "maxQuantity": 27
                        }
                      ],
                      "photos": [
                        {
                          "id": 259,
                          "productId": 398,
                          "path": "2018/8/9d62c632-01a1-488b-b795-267748ff3b4b.jpeg",
                          "createdAt": "2018-09-16T17:29:16.358Z",
                          "format": "jpg",
                          "fullPath": "https://meadow-test.imgix.net/2018/8/9d62c632-01a1-488b-b795-267748ff3b4b.jpeg?auto=format,compress&cs=csrgb&fit=max&h=640&w=640"
                        }
                      ],
                      "productGroups": [],
                      "primaryCategory": {
                        "id": 56,
                        "name": "Vape",
                        "order": 1,
                        "cannabisType": "concentrated"
                      },
                      "brand": {
                        "id": 37,
                        "name": "Dosist"
                      },
                      "subCategories": [
                        {
                          "id": 55,
                          "name": "Vape Cartridge"
                        },
                        {
                          "id": 95,
                          "name": "Disposable"
                        },
                        {
                          "id": 165,
                          "name": "Vapes"
                        }
                      ],
                      "inStock": true
                    },
                    {
                      "id": 423,
                      "organizationId": 1,
                      "name": "7 Pre-rolled Smokes",
                      "unit": "item",
                      "strainType": "mixed",
                      "strainName": "",
                      "percentThc": "",
                      "percentCbd": "",
                      "thcAmount": null,
                      "thcAmountEach": null,
                      "thcUnit": null,
                      "cbdAmount": null,
                      "cbdAmountEach": null,
                      "cbdUnit": null,
                      "description": "7 pre-rolled smokes\n0.5 grams each\n3.5 grams total",
                      "createdAt": "2018-09-17T03:08:35.288Z",
                      "isActive": true,
                      "isFeatured": false,
                      "archivedAt": null,
                      "inventoryType": "option",
                      "unitPlural": "items",
                      "isCompliant": false,
                      "options": [
                        {
                          "id": 1184,
                          "productId": 423,
                          "name": "Indica",
                          "amount": 1,
                          "price": 4000,
                          "salesPrice": null,
                          "createdAt": "2018-09-16T20:08:35.31-07:00",
                          "upc": null,
                          "content": "3.5",
                          "maxQuantity": 23
                        },
                        {
                          "id": 2247,
                          "productId": 423,
                          "name": "BOGO 50% off",
                          "amount": 2,
                          "price": 8000,
                          "salesPrice": 6000,
                          "createdAt": "2021-05-14T12:39:41.798852-07:00",
                          "upc": null,
                          "content": "7",
                          "maxQuantity": 11
                        }
                      ],
                      "photos": [
                        {
                          "id": 284,
                          "productId": 423,
                          "path": "2018/8/1b9cb619-b0e6-4d66-b2d2-fcefa98fb4b4.jpeg",
                          "createdAt": "2018-09-17T03:08:32.509Z",
                          "format": "jpg",
                          "fullPath": "https://meadow-test.imgix.net/2018/8/1b9cb619-b0e6-4d66-b2d2-fcefa98fb4b4.jpeg?auto=format,compress&cs=csrgb&fit=max&h=640&w=640"
                        }
                      ],
                      "productGroups": [],
                      "primaryCategory": {
                        "id": 2,
                        "name": "Pre-Rolls",
                        "order": 2,
                        "cannabisType": "non-concentrated"
                      },
                      "brand": {
                        "id": 88,
                        "name": "Lowell Herb Co"
                      },
                      "subCategories": [
                        {
                          "id": 45,
                          "name": "Top Shelf"
                        }
                      ],
                      "inStock": true
                    }
                  ],
                  "meta": {
                    "categories": [
                      {
                        "id": 1,
                        "name": "Flowers",
                        "order": 0,
                        "cannabisType": "non-concentrated"
                      },
                      {
                        "id": 56,
                        "name": "Vape",
                        "order": 1,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 2,
                        "name": "Pre-Rolls",
                        "order": 2,
                        "cannabisType": "non-concentrated"
                      },
                      {
                        "id": 4,
                        "name": "Concentrates",
                        "order": 3,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 3,
                        "name": "Edibles",
                        "order": 4,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 5,
                        "name": "Topicals",
                        "order": 5,
                        "cannabisType": "concentrated"
                      },
                      {
                        "id": 17,
                        "name": "Clones",
                        "order": 6,
                        "cannabisType": "immature-plant"
                      },
                      {
                        "id": 7,
                        "name": "Accessories",
                        "order": 7,
                        "cannabisType": "none"
                      },
                      {
                        "id": 138,
                        "name": "Meadow Select",
                        "order": 8,
                        "cannabisType": "none"
                      },
                      {
                        "id": 6,
                        "name": "Seeds",
                        "order": 9,
                        "cannabisType": "none"
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "unit", "strainType", "category", "subCategories", "photos", "options"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product, excluding any brand names."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description for the product shown on menus. (Supports markdown)"
                  },
                  "unit": {
                    "type": "string",
                    "enum": ["gram", "item"],
                    "description": "Set to `gram` when this product is in a category which is weighed out (i.e. \"Flowers\"), otherwise set to `item`"
                  },
                  "strainType": {
                    "type": "string",
                    "enum": ["sativa", "indica", "hybrid", "hybrid-sativa", "hybrid-indica", "cbd", "mixed", "none"],
                    "description": "The strain type of the cannabis product, `none` otherwise."
                  },
                  "category": {
                    "type": "string",
                    "description": "A category name from the [List categories endpoint](/endpoints/products/list-categories). Please note that different client organizations may customize category names, for example renaming \"Flowers\" to \"Flower.\""
                  },
                  "subCategories": {
                    "type": "array",
                    "description": "A list of sub category names from the [List sub-categories endpoint](/endpoints/products/list-sub-categories), or a new sub category name. Pass an empty array `[]` to have no sub categories.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "brandName": {
                    "type": "string",
                    "description": "The brand of the product. Meadow will match this to an existing brand or create a new brand if it does not exist."
                  },
                  "photos": {
                    "type": "array",
                    "description": "URLs for the image to associate with this product. Meadow will download with a background job. Max photo size is 15MB.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "options": {
                    "type": "array",
                    "description": "The purchaseable options of this product",
                    "items": {
                      "type": "object",
                      "required": ["amount", "price"],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The optional name for this option. When name is not specified, it will show up on the menu as \"1 item\" or \"3.5 grams\" using the `amount` of the option and the `unit` of the product."
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of the underlying unit of this product. When `inventoryType` is set to `product`, this will be how much inventory is taken out for each quantity of this option purchased. When `inventoryType` is set to `option`, this value is only used to describe the product on the menu. For example, 3.5 for an Eighth or 1 for a single vape cartridge."
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of this option in cents."
                        },
                        "salesPrice": {
                          "type": "number",
                          "description": "The discounted sales price of this option in cents if one exists."
                        },
                        "content": {
                          "type": "string",
                          "description": "The amount of cannabis content this option has based on the `cannabisType` field from the product category. Based on the `cannabisType` this value should be sent as a numeric string based on the following unit:\n\n- `non-concentrated` - grams (g) \n- `concentrated` - milligrams (mg) \n - `mi-infused-solids` - ounces (oz) \n - `mi-infused-fluids` - fluid ounces (fl oz) \n - `edibles` - milligrams (mg) \n - `immature-plant` - plants (i.e. # of plants)\n\nWhen the category's `cannabisType` is set to `none`, you do not need to send a value. For all other types, the values must be greater than 0."
                        },
                        "upc": {
                          "type": "string",
                          "description": "A UPC code for this option"
                        }
                      }
                    }
                  },
                  "thcAmount": {
                    "type": "string",
                    "description": "The total amount of THC present in this product",
                    "nullable": true
                  },
                  "thcAmountEach": {
                    "type": "string",
                    "description": "The amount of THC per each unit of the product (i.e. 10mg per pre-roll in a pack of 15 pre-rolls)",
                    "nullable": true
                  },
                  "thcAmountRangeLow": {
                    "type": "string",
                    "description": "The low value of a range if this product has a range of THC value.",
                    "nullable": true
                  },
                  "thcAmountRangeHigh": {
                    "type": "string",
                    "description": "The high value of a range if this product has a range of THC value.",
                    "nullable": true
                  },
                  "thcUnit": {
                    "type": "string",
                    "description": "The unit for the THC values submitted. Must be specified if any of the THC amount fields are provided.",
                    "enum": ["%", "mg"],
                    "nullable": true
                  },
                  "cbdAmount": {
                    "type": "string",
                    "description": "The total amount of CBD present in this product",
                    "nullable": true
                  },
                  "cbdAmountEach": {
                    "type": "string",
                    "description": "The amount of CBD per each unit of the product (i.e. 10mg per pre-roll in a pack of 15 pre-rolls)",
                    "nullable": true
                  },
                  "cbdAmountRangeLow": {
                    "type": "string",
                    "description": "The low value of a range if this product has a range of CBD value.",
                    "nullable": true
                  },
                  "cbdAmountRangeHigh": {
                    "type": "string",
                    "description": "The high value of a range if this product has a range of CBD value.",
                    "nullable": true
                  },
                  "cbdUnit": {
                    "type": "string",
                    "description": "The unit for the CBD values submitted. Must be specified if any of the CBD amount fields are provided.",
                    "enum": ["%", "mg"],
                    "nullable": true
                  }
                }
              },
              "example": {
                "name": "Blue Dream",
                "unit": "gram",
                "strainType": "hybrid-sativa",
                "category": "Flower",
                "subCategories": ["Top Shelf"],
                "brandName": "Awesome Cannabis",
                "photos": ["https://meadow.imgix.net/2024/10/1aef02cf-9150-481e-9625-760693b4186b.jpeg", "https://meadow.imgix.net/2022/11/67de83f8-1d72-4713-991a-87c3b29d4e93.jpeg"],
                "options": [{
                  "name": "Eighth",
                  "amount": 3.5,
                  "price": 4500,
                  "content": "3.5"
                }]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create product response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}": {
      "put": {
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the product, excluding any brand names."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description for the product shown on menus. (Supports markdown)"
                  },
                  "unit": {
                    "type": "string",
                    "enum": ["gram", "item"],
                    "description": "Set to `gram` when this product is in a category which is weighed out (i.e. \"Flowers\"), otherwise set to `item`"
                  },
                  "strainType": {
                    "type": "string",
                    "enum": ["sativa", "indica", "hybrid", "hybrid-sativa", "hybrid-indica", "cbd", "mixed", "none"],
                    "description": "The strain type of the cannabis product, `none` otherwise."
                  },
                  "category": {
                    "type": "string",
                    "description": "A category name from the [List categories endpoint](/endpoints/products/list-categories). Please note that different client organizations may customize category names, for example renaming \"Flowers\" to \"Flower.\""
                  },
                  "subCategories": {
                    "type": "array",
                    "description": "A list of sub category names from the [List sub-categories endpoint](/endpoints/products/list-sub-categories), or a new sub category name. Pass an empty array `[]` to have no sub categories.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "brandName": {
                    "type": "string",
                    "description": "The brand of the product. Meadow will match this to an existing brand or create a new brand if it does not exist."
                  },
                  "photos": {
                    "type": "array",
                    "description": "URLs for the image to associate with this product. Meadow will download with a background job. Max photo size is 15MB.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "inventoryType": {
                    "type": "string",
                    "description": "The inventory type of this product. Please see the [Inventory Guide](/guides/inventory) for more information.",
                    "enum": ["option", "product", "none"]
                  },
                  "deletedAt": {
                    "type": "string",
                    "description": "Set to current ISO 8601 timestamp to delete product"
                  },
                  "thcAmount": {
                    "type": "string",
                    "description": "The total amount of THC present in this product",
                    "nullable": true
                  },
                  "thcAmountEach": {
                    "type": "string",
                    "description": "The amount of THC per each unit of the product (i.e. 10mg per pre-roll in a pack of 15 pre-rolls)",
                    "nullable": true
                  },
                  "thcAmountRangeLow": {
                    "type": "string",
                    "description": "The low value of a range if this product has a range of THC value.",
                    "nullable": true
                  },
                  "thcAmountRangeHigh": {
                    "type": "string",
                    "description": "The high value of a range if this product has a range of THC value.",
                    "nullable": true
                  },
                  "thcUnit": {
                    "type": "string",
                    "description": "The unit for the THC values submitted. Must be specified if any of the THC amount fields are provided.",
                    "enum": ["%", "mg"],
                    "nullable": true
                  },
                  "cbdAmount": {
                    "type": "string",
                    "description": "The total amount of CBD present in this product",
                    "nullable": true
                  },
                  "cbdAmountEach": {
                    "type": "string",
                    "description": "The amount of CBD per each unit of the product (i.e. 10mg per pre-roll in a pack of 15 pre-rolls)",
                    "nullable": true
                  },
                  "cbdAmountRangeLow": {
                    "type": "string",
                    "description": "The low value of a range if this product has a range of CBD value.",
                    "nullable": true
                  },
                  "cbdAmountRangeHigh": {
                    "type": "string",
                    "description": "The high value of a range if this product has a range of CBD value.",
                    "nullable": true
                  },
                  "cbdUnit": {
                    "type": "string",
                    "description": "The unit for the CBD values submitted. Must be specified if any of the CBD amount fields are provided.",
                    "enum": ["%", "mg"],
                    "nullable": true
                  }
                }
              },
              "example": {
                "name": "Blue Dream",
                "unit": "gram",
                "strainType": "hybrid-sativa",
                "category": "Flower",
                "subCategories": ["Top Shelf"],
                "brandName": "Awesome Cannabis",
                "photos": ["https://meadow.imgix.net/2024/10/1aef02cf-9150-481e-9625-760693b4186b.jpeg", "https://meadow.imgix.net/2022/11/67de83f8-1d72-4713-991a-87c3b29d4e93.jpeg"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update product response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsResponse"
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/options": {
      "put": {
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "options": {
                    "type": "array",
                    "description": "The purchaseable options of this product. This endpoint will update/delete/create ALL of the options for this product. For that reason, any existing options you would like to keep must have the `id` property submitted. Any existing options, which are not submitted with this endpoint will be deleted.",
                    "items": {
                      "type": "object",
                      "required": ["amount", "price"],
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "The ID of an existing option"
                        },
                        "name": {
                          "type": "string",
                          "description": "The optional name for this option. When name is not specified, it will show up on the menu as \"1 item\" or \"3.5 grams\" using the `amount` of the option and the `unit` of the product."
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of the underlying unit of this product. When `inventoryType` is set to `product`, this will be how much inventory is taken out for each quantity of this option purchased. When `inventoryType` is set to `option`, this value is only used to describe the product on the menu. For example, 3.5 for an Eighth or 1 for a single vape cartridge."
                        },
                        "price": {
                          "type": "number",
                          "description": "The price of this option in cents."
                        },
                        "salesPrice": {
                          "type": "number",
                          "description": "The discounted sales price of this option in cents if one exists."
                        },
                        "content": {
                          "type": "string",
                          "description": "The amount of cannabis content this option has based on the `cannabisType` field from the product category. Based on the `cannabisType` this value should be sent as a numeric string based on the following unit:\n\n- `non-concentrated` - grams (g) \n- `concentrated` - milligrams (mg) \n - `mi-infused-solids` - ounces (oz) \n - `mi-infused-fluids` - fluid ounces (fl oz) \n - `edibles` - milligrams (mg) \n - `immature-plant` - plants (i.e. # of plants)\n\nWhen the category's `cannabisType` is set to `none`, you do not need to send a value. For all other types, the values must be greater than 0."
                        },
                        "upc": {
                          "type": "string",
                          "description": "A UPC code for this option"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "options": [{
                  "id": 15472,
                  "name": "Eighth",
                  "amount": 3.5,
                  "price": 4700
                }, {
                 "amount": 7,
                 "price": 8500,
                 "content": "7"
                }]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update product response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsResponse"
                },
                "example": {
                  "data": {
                    "id": 11867,
                    "organizationId": 25,
                    "brand": {
                      "id": 2238,
                      "name": "Awesome Cannabis",
                      "createdAt": "2024-12-12T03:08:58.012Z",
                      "updatedAt": "2024-12-12T03:08:58.012Z",
                      "description": null
                    },
                    "subCategories": [
                      {
                        "id": 30325,
                        "organizationId": 25,
                        "name": "Top Shelf",
                        "createdAt": "2024-12-12T03:01:11.823Z",
                        "updatedAt": "2024-12-12T03:01:11.823Z"
                      }
                    ],
                    "inventoryType": "option",
                    "createdAt": "2024-12-12T04:08:00.429Z",
                    "updatedAt": "2024-12-12T05:06:35.447Z",
                    "deletedAt": null,
                    "description": null,
                    "isActive": false,
                    "isFeatured": false,
                    "photos": [
                      "https://meadow.imgix.net/2022/11/67de83f8-1d72-4713-991a-87c3b29d4e93.jpeg",
                      "https://meadow.imgix.net/2024/10/1aef02cf-9150-481e-9625-760693b4186b.jpeg"
                    ],
                    "name": "Blue Dream",
                    "strainType": "hybrid-sativa",
                    "isCompliant": false,
                    "unit": "gram",
                    "primaryCategory": {
                      "id": 286,
                      "name": "Flower",
                      "createdAt": "2023-12-16T02:51:28.738Z",
                      "updatedAt": "2023-12-16T02:51:28.738Z",
                      "cannabisType": "non-concentrated"
                    },
                    "options": [
                      {
                        "id": 15472,
                        "name": "Eighth",
                        "amount": 3.5,
                        "price": 4700,
                        "salesPrice": null,
                        "createdAt": "2024-12-12T04:08:00.433Z",
                        "updatedAt": "2024-12-12T07:09:11.770Z",
                        "upc": null,
                        "content": "3.5"
                      },
                      {
                        "id": 15475,
                        "name": null,
                        "amount": 7,
                        "price": 8500,
                        "salesPrice": null,
                        "createdAt": "2024-12-12T07:12:48.923Z",
                        "updatedAt": "2024-12-12T07:12:48.923Z",
                        "upc": null,
                        "content": "7"
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/tags": {
      "get": {
        "description": "Fetch all of the product tags for an organziation",
        "servers": [
          {
            "url": "https://daffodil-staging.getmeadow.com"
          },
          {
            "url": "https://daffodil.getmeadow.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Tags response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the tag"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the tag",
                      "nullable": true
                    },
                    "productIds": {
                      "type": "array",
                      "description": "An array of IDs that will correspond to the `id` property of each product from the [Retrieve Menu](/endpoints/menu/list-menu) endpoint. This value can be `null` if it does not have any products associated with it.",
                      "items": {
                        "type": "number"
                      },
                      "nullable": true
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 8,
                      "name": "Top shelf",
                      "description": "Only the dankest nugs get this designation",
                      "productIds": [
                        86,
                        123,
                        126,
                        224,
                        675,
                        9543,
                        9748
                      ]
                    },
                    {
                      "id": 9,
                      "name": "Monday Deals",
                      "description": null,
                      "productIds": [
                        9839
                      ]
                    },
                    {
                      "id": 10,
                      "name": "Tuesday Deals",
                      "description": null,
                      "productIds": [
                        9594,
                        9845
                      ]
                    },
                    {
                      "id": 23,
                      "name": "Indoor",
                      "description": null,
                      "productIds": null
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/options/upc": {
      "put": {
        "description": "Update UPC fields for product options",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product these options belong to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["options"],
                "properties": {
                  "options": {
                    "type": "array",
                    "description": "Array of product options to update",
                    "items": {
                      "type": "object",
                      "required": ["id", "upc"],
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "The ID from the [menu api response](/endpoints/menu/list-menu) `data[].options[].id`"
                        },
                        "upc": {
                          "type": "string",
                          "description": "The new UPC for this option"
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "options": [
                  {
                    "id": 2307,
                    "upc": "TEST_UPC_1"
                  },
                  {
                    "id": 2325,
                    "upc": "TEST_UPC_2"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update UPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "options": {
                      "type": "array",
                      "description": "The options for this product. Please note that all options will be returned, not just the ones you submitted.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "The product option ID "
                          },
                          "name": {
                            "type": "string",
                            "description": "The name for this option",
                            "nullable": true
                          },
                          "amount": {
                            "type": "number",
                            "description": "The amount for this option"
                          },
                          "price": {
                            "type": "number",
                            "description": "The price of this option"
                          },
                          "upc": {
                            "type": "string",
                            "description": "The upc for this option",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "id": 994,
                    "organizationId": 1,
                    "name": "Blue Dream",
                    "unit": "gram",
                    "strainType": "none",
                    "percentThc": null,
                    "percentCbd": null,
                    "description": "",
                    "createdAt": "2022-05-03T20:07:46.098Z",
                    "updatedAt": "2022-08-08T18:16:17.477Z",
                    "isActive": true,
                    "isFeatured": false,
                    "archivedAt": null,
                    "subCategoryIds": [],
                    "categoryId": 1,
                    "inventoryType": "option",
                    "unitPlural": "grams",
                    "deletedAt": null,
                    "movingAverageCostPerUnit": null,
                    "defaultCostPerUnit": null,
                    "leaflyCategory": null,
                    "strainName": null,
                    "isCompliant": true,
                    "brandId": 330,
                    "thcAmount": null,
                    "thcAmountEach": null,
                    "thcUnit": null,
                    "cbdAmount": null,
                    "cbdAmountEach": null,
                    "cbdUnit": null,
                    "options": [
                      {
                        "id": 2307,
                        "productId": 994,
                        "name": "Eighth",
                        "amount": 3.5,
                        "price": 4000,
                        "createdAt": "2022-05-03T20:07:46.121Z",
                        "updatedAt": "2022-05-03T20:07:46.121Z",
                        "deletedAt": null,
                        "upc": "TEST_UPC_1",
                        "movingAverageCostPerUnit": null,
                        "content": null,
                        "defaultCostPerUnit": null,
                        "salesPrice": 3500
                      },
                      {
                        "id": 2308,
                        "productId": 994,
                        "name": "Quarter",
                        "amount": 7,
                        "price": 6500,
                        "createdAt": "2022-08-08T16:45:53.625Z",
                        "updatedAt": "2022-08-08T18:16:17.463Z",
                        "deletedAt": null,
                        "upc": "TEST_ZZ2",
                        "movingAverageCostPerUnit": null,
                        "content": null,
                        "defaultCostPerUnit": null,
                        "salesPrice": null
                      }
                    ]
                  }
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/product-categories": {
      "get": {
        "description": "Retrieve all of the product categories for the organization.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Product categories response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of the category"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the category"
                    },
                    "cannabisType": {
                      "type": "string",
                      "description": "The type of cannabis content all products in this category have. This is used to calculate purchase limits.\n\n- `non-concentrated` - Used for flower. Cannabis content will be measured in grams (g) \n - `concentrated` - Used for derived, concentrated products such as edibles or concentrates. Content measured in milligrams (mg) \n - `mi-infused-solids` - Used for infused solids only in the state of Michigan. Content measured in ounces (oz) \n - `mi-infused-fluids` - Used for infused fluids such as drinks only in the state of Michigan. Content measured in fluid ounces (oz) \n - `edibles` - All edibles (used in New Jersey & Massachusetts). Content measured in milligrams (mg) \n - `immature-plant` - Used for cannabis plants (i.e. clones). \n - `none` - This category does not contain cannabis products.",
                      "enum": ["non-concentrated", "concentrated", "mi-infused-solids", "mi-infused-fluids", "edibles", "immature-plant", "none"]
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 286,
                      "name": "Flower",
                      "createdAt": "2023-12-16T02:51:28.738Z",
                      "updatedAt": "2023-12-16T02:51:28.738Z",
                      "cannabisType": "non-concentrated"
                    },
                    {
                      "id": 287,
                      "name": "Prerolls",
                      "createdAt": "2023-12-16T02:51:28.739Z",
                      "updatedAt": "2023-12-16T02:51:28.739Z",
                      "cannabisType": "non-concentrated"
                    },
                    {
                      "id": 288,
                      "name": "Edibles",
                      "createdAt": "2023-12-16T02:51:28.741Z",
                      "updatedAt": "2023-12-16T02:51:28.741Z",
                      "cannabisType": "concentrated"
                    },
                    {
                      "id": 289,
                      "name": "Concentrates",
                      "createdAt": "2023-12-16T02:51:28.742Z",
                      "updatedAt": "2023-12-16T02:51:28.742Z",
                      "cannabisType": "concentrated"
                    },
                    {
                      "id": 291,
                      "name": "Accessories",
                      "createdAt": "2023-12-16T02:51:28.745Z",
                      "updatedAt": "2023-12-16T02:51:28.745Z",
                      "cannabisType": "none"
                    },
                    {
                      "id": 295,
                      "name": "Clones",
                      "createdAt": "2023-12-16T02:51:49.228Z",
                      "updatedAt": "2023-12-16T02:51:49.228Z",
                      "cannabisType": "immature-plant"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    },
    "/api/v1/product-sub-categories": {
      "get": {
        "description": "Retrieve all of the product sub-categories for the organization.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Product sub-categories response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of the sub-category"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the sub-category"
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": 30034,
                      "name": "Badder",
                      "createdAt": "2023-12-16T02:52:05.054Z",
                      "updatedAt": "2023-12-16T02:52:05.054Z"
                    },
                    {
                      "id": 30035,
                      "name": "Drink",
                      "createdAt": "2023-12-16T02:52:05.214Z",
                      "updatedAt": "2023-12-16T02:52:05.214Z"
                    },
                    {
                      "id": 30026,
                      "name": "Happy",
                      "createdAt": "2023-12-16T02:51:52.741Z",
                      "updatedAt": "2023-12-16T02:51:52.741Z"
                    },
                    {
                      "id": 30022,
                      "name": "Top Shelf",
                      "createdAt": "2023-12-16T02:51:50.313Z",
                      "updatedAt": "2023-12-16T02:51:50.313Z"
                    }
                  ]
                }
              }
            }
          },
          "4XX": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        }
      },
    }
  },
  "components": {
    "schemas": {
      "APIError": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "A description of the error code"
              },
              "code": {
                "type": "string",
                "example": "CODE_OF_ERROR_WILL_BE_HERE"
              }
            }
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id for the customer"
          },
          "hashId": {
            "type": "string",
            "description": "An ID used to display to the customer and dispensary instead of the `id` number"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the customer"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the customer"
          },
          "email": {
            "type": "string",
            "description": "The email of the customer",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The phone of the customer",
            "nullable": true
          },
          "joinedAt": {
            "type": "string",
            "description": "The date the customer joined the dispensary"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date this customer was last updated"
          },
          "birthday": {
            "type": "string",
            "description": "The birthday of the customer in `YYYY-MM-DD`",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "description": "One of `male`, `female`, `tertiary`",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "description": "The postal code of the customer",
            "nullable": true
          },
          "licenseExpiry": {
            "type": "string",
            "description": "The expiration date of this customer’s drivers license or `null` if it is not recorded.",
            "nullable": true
          },
          "marketingOptIn": {
            "type": "boolean",
            "description": "Whether this customer is opted in to receive marketing"
          },
          "marketingOptInAt": {
            "type": "string",
            "description": "When this customer opted in to marketing or `null`",
            "nullable": true
          },
          "customerGroups": {
            "type": "array",
            "description": "An array of Strings for the names of the customer groups this customer is a part of (Example: Veterans, Seniors, etc.)",
            "items": {
              "type": "string"
            }
          },
          "loyalty": {
            "type": "object",
            "description": "Information about the loyalty of the customer",
            "properties": {
              "pointsAmount": {
                "type": "number",
                "description": "The amount of loyalty points the customer has accrued"
              }
            }
          },
          "mostRecentAddress": {
            "type": "object",
            "description": "The most recent address used for a delivery order or `null` if one does not exist",
            "nullable": true,
            "properties": {
              "street1": {
                "type": "string"
              },
              "street2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
            }
          },
          "medicalExpiration": {
            "type": "string",
            "description": "The expiration date of this customer’s medical recommendation or `null` if they are an adult use customer",
            "nullable": true
          },
        }
      },
      "CustomerGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id for the customer group"
          },
          "name": {
            "type": "string",
            "description": "The name of the group"
          },
          "description": {
            "type": "string",
            "description": "The description of the group",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date this group was created"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date this group was last updated"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the order"
          },
          "totalPrice": {
            "type": "number",
            "description": "The subtotal price before discounts, credits, adjustments are taken into account."
          },
          "netPrice": {
            "type": "number",
            "description": "The final price of the order before payment & delivery fees. Includes taxes"
          },
          "customerGrandTotal": {
            "type": "number",
            "description": "The final price of the order after all fees"
          },
          "createdAt": {
            "type": "string",
            "description": "The datetime the order was created"
          },
          "packedAt": {
            "type": "string",
            "description": "The datetime the order was packed on",
            "nullable": true
          },
          "fulfilledAt": {
            "type": "string",
            "description": "The date the order was fulfilled",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of this order",
            "enum": ["delivery", "pickup", "in-store"]
          },
          "status": {
            "type": "string",
            "description": "The status of the order.\n\n- `draft` is an order submitted without inventory taken out\n- `new` is an order that has had inventory associated with it\n- `packed` signifies an order has been processed and is waiting for pickup/delivery\n- `fulfilled` is an order that has been fully completed\n- `canceled` is an order that has been canceled",
            "enum": ["draft", "new", "packed", "fulfilled", "canceled"]
          },
          "cancelationReason": {
            "type": "string",
            "description": "A description of why the order was canceled",
            "nullable": true
          },
          "canceledAt": {
            "type": "string",
            "description": "When the order was canceled",
            "nullable": true
          },
          "taxExempt": {
            "type": "boolean",
            "description": "Whether this order was marked as tax exempt or not"
          },
          "refundTotal": {
            "type": "number",
            "description": "The amount refunded by returns on this order"
          },
          "isMedical": {
            "type": "boolean",
            "description": "Whether this order was for a medical customer or not"
          },
          "customerName": {
            "type": "string",
            "description": "The name of the customer for express pickup or kiosk orders.",
            "nullable": true
          },
          "deliveryFee": {
            "type": "number",
            "description": "The delivery fee for the order"
          },
          "deliveryFeeDescription": {
            "type": "string",
            "description": "A description of the delivery fee that can be shown to the customer",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "description": "All of the products purchased with this order",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of this line item"
                },
                "quantity": {
                  "type": "number",
                  "description": "The quantity of this line item"
                },
                "productId": {
                  "type": "number",
                  "description": "The id of the product purchased"
                },
                "productName": {
                  "type": "string",
                  "description": "The name of the product purchased"
                },
                "optionId": {
                  "type": "number",
                  "description": "The id of the product option purchased"
                },
                "optionName": {
                  "type": "string",
                  "description": "The name of the product option",
                  "nullable": true
                },
                "optionPrice": {
                  "type": "number",
                  "description": "The price of the product option at time of purchase"
                },
                "optionSalesPrice": {
                  "type": "number",
                  "description": "The sales price of the product option at time of purchase if it was on sale",
                  "nullable": true
                },
                "productBrandId": {
                  "type": "number",
                  "description": "The brand id of the product",
                  "nullable": true
                },
                "productBrand": {
                  "type": "string",
                  "description": "The name of the brand of the product",
                  "nullable": true
                },
                "unitPrice": {
                  "type": "number",
                  "description": "The price per unit of this line item"
                },
                "subtotalPrice": {
                  "type": "number",
                  "description": "The subtotal of this line item before discounts"
                },
                "finalPrice": {
                  "type": "number",
                  "description": "The final price for this line item after all discounts"
                },
                "productMovingAverageCostPerUnit": {
                  "type": "number",
                  "description": "The moving average cost per unit of the product",
                  "nullable": true
                },
                "optionMovingAverageCostPerUnit": {
                  "type": "string",
                  "description": "The moving average cost per unit of the product option",
                  "nullable": true
                },
                "packageLineCost": {
                  "type": "string",
                  "description": "The total cost for all metrc packages used to fulfill this line item",
                  "nullable": true
                },
                "primaryCategory": {
                  "type": "object",
                  "description": "The primary category for the product of this line item",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The ID of this product category"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the primary category"
                    }
                  }
                },
                "discounts": {
                  "type": "array",
                  "description": "An array of discounts applied to this line item (may be empty)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "discountId": {
                        "type": "number",
                        "description": "The ID for this discount. This value will be null for a custom discount added by a budtender",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Either `flat` for a dollar amount or `percent` for a percent amount off"
                      },
                      "amount": {
                        "type": "number",
                        "description": "The amount of the discount before being applied. Either in cents or a percent depending on the type."
                      },
                      "amountUsed": {
                        "type": "number",
                        "description": "The amount that was taken off of the line item by this discount, represented in cents"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the discount, which may be shown to the customer"
                      }
                    }
                  }
                },
                "fulfillAs": {
                  "type": "array",
                  "description": "An array of objects showing what packages or product options fulfilled this order. Could also be `null` if the line item does not have any packages or substitutions associated with it.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pkg": {
                        "type": "object",
                        "description": "An object about the compliance package for this fulfillment. Please handle both `null` and an empty object `{}` for times when there is not a package",
                        "properties": {
                          "unit": {
                            "type": "string",
                            "description": "The metrc unit of this package"
                          },
                          "label": {
                            "type": "string",
                            "description": "The metrc package tag"
                          },
                          "costPerUnit": {
                            "type": "string",
                            "description": "The cost per unit of this package"
                          }
                        },
                        "nullable": true
                      },
                      "optionSum": {
                        "type": "number",
                        "description": "A negative number showing how much quantity of the underlying product option was used for this fulfillment. For `option` tracking this will be an integer, but for `product` tracking it could be a decimal."
                      },
                      "productOptionId": {
                        "type": "number",
                        "description": "The ID of the product option used for this fulfillment. For most cases, it will be the same as `lineItems[].optionId`, but in cases where another option is substituted to fulfill another (Example: 2 eighths fulfilling a quarter option), this `productOptionId` could be different."
                      },
                      "quantityFulfilled": {
                        "type": "string",
                        "description": "The quantity of the underlying `lineItem` that this fulfillment is responsible for"
                      }
                    }
                  }
                }
              }
            }
          },
          "payments": {
            "type": "array",
            "description": "All of the payments applied to this order",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of this payment"
                },
                "paymentTypeId": {
                  "type": "number",
                  "description": "The ID of the payment type used for this payment"
                },
                "amount": {
                  "type": "number",
                  "description": "The amount of the payment before fees in cents"
                },
                "finalAmount": {
                  "type": "number",
                  "description": "The final amount of the payment after fees are included"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the payment type being used to make this payment"
                },
                "fee": {
                  "type": "number",
                  "description": "The amount of a flat fee in cents added to this payment"
                },
                "feePercent": {
                  "type": "string",
                  "description": "The % fee that this payment type has for all payments"
                },
                "feeAmount": {
                  "type": "number",
                  "description": "The fee in cents the customer is paying. This is the flat `fee` + the `feePercent` multiplied by the payment amount."
                },
                "feeDescription": {
                  "type": "string",
                  "description": "The description of the fee that was shown to the customer.",
                  "nullable": true
                }
              }
            }
          },
          "customer": {
            "type": "object",
            "description": "The customer attached to this order. Will be an empty object `{}` if there is no customer associated with this order (i.e. it is an anonymous order)",
            "properties": {
              "id": {
                "type": "number",
                "description": "The ID of the customer"
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the customer"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the customer"
              },
              "email": {
                "type": "string",
                "description": "The email of the customer",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "description": "The phone of the customer",
                "nullable": true
              },
              "birthday": {
                "type": "string",
                "description": "The birthday of the customer",
                "nullable": true
              },
              "hashId": {
                "type": "string",
                "description": "An ID used to display to the customer and dispensary instead of the `id` number"
              },
              "sex": {
                "type": "string",
                "description": "One of `male`, `female`, `tertiary`"
              },
              "zip": {
                "type": "string",
                "description": "The postal code for the customer",
                "nullable": true
              },
              "licenseExpiry": {
                "type": "string",
                "description": "The expiration date of this customer’s drivers license or `null` if it is not recorded.",
                "nullable": true
              },
              "medicalExpiration": {
                "type": "string",
                "description": "The expiration date of this customer’s medical recommendation or `null` if they are an adult use customer",
                "nullable": true
              }
            }
          },
          "placedBy": {
            "type": "object",
            "description": "The employee that created this order. Will be an empty object `{}` if this order was created by a customer and not an employee.",
            "properties": {
              "id": {
                "type": "number",
                "description": "The ID of the employee who created this order"
              },
              "email": {
                "type": "string",
                "description": "The email of the employee"
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the employee"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the employee"
              }
            }
          },
          "fulfilledBy": {
            "type": "object",
            "description": "The employee that fulfilled this order. Will be an empty object `{}` if there is no employee that fulfilled it.",
            "properties": {
              "id": {
                "type": "number",
                "description": "The ID of the employee who fulfilled this order"
              },
              "email": {
                "type": "string",
                "description": "The email of the employee"
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the employee"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the employee"
              }
            }
          },
          "adjustments": {
            "type": "array",
            "description": "Adjustments either made automatically such as even dollar rounding or custom adjustments by an employee",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "The amount of the adjustment in cents. May be either negative or positive."
                },
                "description": {
                  "type": "string",
                  "description": "A description for the adjustment"
                },
                "isTaxExemption": {
                  "type": "boolean",
                  "description": "Set to `true` if this adjustment was automatically added to offset taxes that were included in the price of a product when a customer is tax exempt"
                },
                "taxid": {
                  "type": "number",
                  "description": "The ID of the tax exempted or `null`"
                }
              }
            }
          },
          "credits": {
            "type": "array",
            "description": "Credits used on this order",
            "items": {
              "type": "object",
              "properties": {
                "creditId": {
                  "type": "number",
                  "description": "The ID for the credit applied"
                },
                "type": {
                  "type": "string",
                  "description": "Either `promo-code` or `store-credit`"
                },
                "amountUsed": {
                  "type": "number",
                  "description": "The credit amount applied to the order in cents"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the credit"
                }
              }
            }
          },
          "discounts": {
            "type": "array",
            "description": "The discounts applied to this order",
            "items": {
              "type": "object",
              "properties": {
                "discountId": {
                  "type": "number",
                  "description": "The ID for this discount. This value will be null for a custom discount added by a budtender."
                },
                "type": {
                  "type": "string",
                  "description": "Either `flat` for a dollar amount or `percent` for a percent amount off"
                },
                "amount": {
                  "type": "number",
                  "description": "The amount of the discount before being applied. Either in cents or a percent depending on the type."
                },
                "amountUsed": {
                  "type": "number",
                  "description": "The amount of the discount that was applied to the order represented in cents."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the discount, which may be shown to the customer"
                }
              }
            }
          },
          "loyaltyRedemptions": {
            "type": "array",
            "description": "The loyalty redemptions used on this order",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "One of `cash-back`, `flat`, `percent`, or `free-product`"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the reward that was redeemed"
                },
                "pointsRequirement": {
                  "type": "string",
                  "description": "The minimum number of loyalty points required to redeem this reward"
                },
                "pointsAmount": {
                  "type": "string",
                  "description": "The amount of points used in this redemption"
                },
                "discountAmount": {
                  "type": "string",
                  "description": "The discount amount of the reward. For `cash-back` this is the amount in cents per point used. For `flat` it is a flat amount in cents, `percent` would be a percent off"
                },
                "amountUsed": {
                  "type": "number",
                  "description": "The amount of the discount applied to the order in cents"
                },
                "productOptionId": {
                  "type": "number",
                  "description": "The product option id for a `free-product` redemption",
                  "nullable": true
                }
              }
            }
          },
          "taxes": {
            "type": "array",
            "description": "The taxes applied to this order",
            "items": {
              "type": "object",
              "properties": {
                "taxId": {
                  "type": "number",
                  "description": "The ID for this tax"
                },
                "amount": {
                  "type": "number",
                  "description": "The amount applied to the order in cents"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the tax"
                },
                "rate": {
                  "type": "string",
                  "description": "A numeric value for the percentage of a tax"
                },
                "amountBeforeExemption": {
                  "type": "number",
                  "description": "The amount of the tax as calculated before determining what was exempted in cents"
                },
                "amountExempted": {
                  "type": "number",
                  "description": "The amount of the tax reduction due to an exemption in cents"
                },
                "included": {
                  "type": "boolean",
                  "description": "Whether the amount of this tax was already included in the product of the line items"
                },
                "exemptable": {
                  "type": "boolean",
                  "description": "Whether this tax is able to be exempted"
                },
                "tier": {
                  "type": "string",
                  "description": "The order of tax compounding. Will be a value between 1 and 5 indicating the order the tax was applied. Each tier may have multiple taxes in it."
                },
                "type": {
                  "type": "string",
                  "description": "Either `standard` or `california-excise`"
                },
                "normalRate": {
                  "type": "string",
                  "description": "The rate of this tax before it was overriden by an employee"
                }
              }
            }
          },
          "returns": {
            "type": "array",
            "description": "The returns applied to this order",
            "items": {
              "$ref": "#/components/schemas/OrderReturn"
            }
          },
          "address": {
            "type": "object",
            "description": "The address if this order is a delivery order. Otherwise, `null`",
            "nullable": true,
            "properties": {
              "street1": {
                "type": "string",
                "description": ""
              },
              "street2": {
                "type": "string",
                "description": "",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": ""
              },
              "state": {
                "type": "string",
                "description": ""
              },
              "postalCode": {
                "type": "string",
                "description": ""
              }
            }
          },
        }
      },
      "OrderReturn": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The ID of this return"
          },
          "refundType": {
            "type": "string",
            "description": "One of `payment-method`, `store-credit` or `none`"
          },
          "refundInitial": {
            "type": "number",
            "description": "The initial refund before taxes, credits, adjustments, loyalty, and discounts"
          },
          "refundTotal": {
            "type": "number",
            "description": "The final refund total of the return"
          },
          "creditsTotal": {
            "type": "number",
            "description": "The amount of credits refunded from the order"
          },
          "discountsTotal": {
            "type": "number",
            "description": "The amount of discounts refunded from the order"
          },
          "adjustmentAmount": {
            "type": "number",
            "description": "A manual adjustment of the refund for this return"
          },
          "adjustmentDescription": {
            "type": "string",
            "description": "A description for the adjustment if there is one",
            "nullable": true
          },
          "paymentTypeName": {
            "type": "string",
            "description": "The name of the payment type this refund was processed as"
          },
          "loyaltyTotal": {
            "type": "number",
            "description": "The amount of a loyalty redemption returned"
          },
          "voidedAt": {
            "type": "string",
            "description": "The date that this return was voided or `null`. If there is a value here, it means the return was canceled and is no longer applicable",
            "nullable": true
          },
          "voidedReason": {
            "type": "string",
            "description": "The reason this return was voided",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date this return was created"
          },
          "lineItems": {
            "type": "array",
            "description": "An array of line items for this return",
            "items": {
              "type": "object",
              "properties": {
                "orderLineItemId": {
                  "type": "number",
                  "description": "The ID of the `lineItems[].id` that is being returned"
                },
                "type": {
                  "type": "string",
                  "description": "Either `return` or `exchange`"
                },
                "inventoryAction": {
                  "type": "string",
                  "description": "One of `waste`, `inventory` , or `vendor`."
                },
                "quantity": {
                  "type": "number",
                  "description": "The quantity of the order line item being returned"
                },
                "reason": {
                  "type": "string",
                  "description": "A reason this line item is being returned"
                },
                "fulfillAs": {
                  "type": "array",
                  "description": "Fulfillment information for the packages on this return. See `lineItems[].fulfillAs` for possible properties",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "taxes": {
            "type": "array",
            "description": "An array of tax information about this return",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "The amount of tax proportionally applied to this return"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the tax"
                },
                "refunded": {
                  "type": "boolean",
                  "description": "A boolean of whether this tax was refunded to the customer or not"
                },
                "rate": {
                  "type": "number",
                  "description": "The tax rate"
                },
                "included": {
                  "type": "boolean",
                  "description": "Whether this tax was included in the price of the products"
                },
                "exemptable": {
                  "type": "boolean",
                  "description": "Whether this tax was exemptable or not"
                }
              }
            }
          },
          "createdBy": {
            "type": "object",
            "description": "The employee that created this return",
            "properties": {
              "id": {
                "type": "number",
                "description": "The id of the employee who created this return"
              },
              "email": {
                "type": "string",
                "description": "The email of the employee"
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the employee"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the employee"
              }
            }
          },
          "voidedBy": {
            "type": "object",
            "description": "The employee that voided this return (or `{}` if it is not voided)",
            "properties": {
              "id": {
                "type": "number",
                "description": "The id of the employee who voided this return"
              },
              "email": {
                "type": "string",
                "description": "The email of the employee"
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the employee"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the employee"
              }
            }
          }
        }
      },
      "PaymentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id for the payment type"
          },
          "name": {
            "type": "string",
            "description": "The name of the payment type"
          },
          "fee": {
            "type": "number",
            "description": "The flat fee for using this payment type in cents"
          },
          "feeDescription": {
            "type": "string",
            "description": "The description for the fee to show to the customer",
            "nullable": true
          },
          "method": {
            "type": "string",
            "description": "The medium the payment type uses to collect payment",
            "enum": ["cash", "debit", "other", "stronghold"]
          },
          "feePercent": {
            "type": "string",
            "description": "The percentage fee for this payment type"
          },
          "createdAt": {
            "type": "string",
            "description": "The date this payment type was created"
          }
        }
      },
      "ProductsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the new product"
          },
          "organizationId": {
            "type": "string",
            "description": "The client organization's ID"
          },
          "name": {
            "type": "string",
            "description": "The name of the product"
          },
          "description": {
            "type": "string",
            "description": "The description of the product",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Either `gram` or `item`"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether this product is shown on the menu. Client organizations must update this via Meadow."
          },
          "isFeatured": {
            "type": "boolean",
            "description": "Whether this product is shown as featured. Client organizations must update this via Meadow."
          },
          "brand": {
            "type": "object",
            "description": "The brand of this product",
            "nullable": true,
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the brand"
              }
            }
          },
          "primaryCategory": {
            "type": "object",
            "description": "The category of this product",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the category"
              },
              "cannabisType": {
                "type": "string",
                "description": "The cannabis type of the products in this category used for purchase order calculations.",
                "enum": ["non-concentrated", "concentrated", "mi-infused-solids", "mi-infused-fluids", "edibles", "immature-plant", "none"]
              }
            }
          },
          "subCategories": {
            "type": "array",
            "description": "The names of all the sub-categories of this product (may be empty `[]`)",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the sub-category"
                }
              }
            }
          },
          "photos": {
            "type": "array",
            "description": "Photo URLs submitted in the request",
            "items": {
              "type": "string"
            }
          },
          "options": {
            "type": "array",
            "description": "The purchaseable options for this product",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The ID of this option"
                },
                "name": {
                  "type": "string",
                  "description": "The name of this option",
                  "nullable": true
                },
                "price": {
                  "type": "number",
                  "description": "The price of this option in cents"
                },
                "salesPrice": {
                  "type": "number",
                  "description": "The sales price of this option in cents",
                  "nullable": true
                },
                "content": {
                  "type": "string",
                  "description": "The cannabis content of this option"
                },
                "upc": {
                  "type": "string",
                  "description": "The UPC for this option",
                  "nullable": true
                }
              }
            }
          },
          "thcAmount": {
            "type": "string",
            "description": "The total amount of THC present in this product",
            "nullable": true
          },
          "thcAmountEach": {
            "type": "string",
            "description": "The amount of THC per each unit of the product (i.e. 10mg per pre-roll in a pack of 15 pre-rolls)",
            "nullable": true
          },
          "thcAmountRangeLow": {
            "type": "string",
            "description": "The low value of a range if this product has a range of THC value.",
            "nullable": true
          },
          "thcAmountRangeHigh": {
            "type": "string",
            "description": "The high value of a range if this product has a range of THC value.",
            "nullable": true
          },
          "thcUnit": {
            "type": "string",
            "description": "The unit for the THC values submitted.",
            "enum": ["%", "mg"],
            "nullable": true
          },
          "cbdAmount": {
            "type": "string",
            "description": "The total amount of CBD present in this product",
            "nullable": true
          },
          "cbdAmountEach": {
            "type": "string",
            "description": "The amount of CBD per each unit of the product (i.e. 10mg per pre-roll in a pack of 15 pre-rolls)",
            "nullable": true
          },
          "cbdAmountRangeLow": {
            "type": "string",
            "description": "The low value of a range if this product has a range of CBD value.",
            "nullable": true
          },
          "cbdAmountRangeHigh": {
            "type": "string",
            "description": "The high value of a range if this product has a range of CBD value.",
            "nullable": true
          },
          "cbdUnit": {
            "type": "string",
            "description": "The unit for the CBD values submitted.",
            "enum": ["%", "mg"],
            "nullable": true
          }
        },
        "example": {
          "data": {
            "id": 11867,
            "organizationId": 25,
            "brand": {
              "id": 2238,
              "name": "Awesome Cannabis",
              "createdAt": "2024-12-12T03:08:58.012Z",
              "updatedAt": "2024-12-12T03:08:58.012Z",
              "description": null
            },
            "subCategories": [
              {
                "id": 30325,
                "organizationId": 25,
                "name": "Top Shelf",
                "createdAt": "2024-12-12T03:01:11.823Z",
                "updatedAt": "2024-12-12T03:01:11.823Z"
              }
            ],
            "inventoryType": "option",
            "createdAt": "2024-12-12T04:08:00.429Z",
            "updatedAt": "2024-12-12T04:08:00.429Z",
            "isActive": false,
            "isFeatured": false,
            "photos": [
              "https://meadow.imgix.net/2024/10/1aef02cf-9150-481e-9625-760693b4186b.jpeg",
              "https://meadow.imgix.net/2022/11/67de83f8-1d72-4713-991a-87c3b29d4e93.jpeg"
            ],
            "name": "Blue Dream",
            "strainType": "hybrid-sativa",
            "isCompliant": true,
            "unit": "gram",
            "primaryCategory": {
              "id": 286,
              "name": "Flower",
              "createdAt": "2023-12-16T02:51:28.738Z",
              "updatedAt": "2023-12-16T02:51:28.738Z",
              "cannabisType": "non-concentrated"
            },
            "options": [
              {
                "id": 15472,
                "name": "Eighth",
                "amount": 3.5,
                "price": 4500,
                "salesPrice": null,
                "createdAt": "2024-12-12T04:08:00.433Z",
                "updatedAt": "2024-12-12T04:08:00.433Z",
                "upc": null,
                "content": "3.5"
              }
            ],
            "thcAmount": "12",
            "thcAmountEach": "12",
            "thcAmountRangeLow": null,
            "thcAmountRangeHigh": null,
            "thcUnit": "mg",
            "cbdAmount": null,
            "cbdAmountEach": null,
            "cbdAmountRangeLow": null,
            "cbdAmountRangeHigh": null,
            "cbdUnit": null
          }
        }
      },
      "PurchaseOrderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The ID of the purchase order"
          },
          "organizationId": {
            "type": "number",
            "description": "The client organization ID"
          },
          "status": {
            "type": "string",
            "description": "If `closed` no more edits can be made to this PO.",
            "enum": ["open", "closed"]
          },
          "finalTotal": {
            "type": "number",
            "description": "Total in cents for the PO"
          },
          "subtotal": {
            "type": "number",
            "description": "Total in cents for the PO minus any shipping & handling"
          },
          "inventoryVendorId": {
            "type": "number",
            "description": "The ID of the inventory vendor"
          },
          "lineItems": {
            "type": "array",
            "description": "The line items of the purchase order",
            "items": {
              "type": "object",
              "properties": {
                "product": {
                  "type": "object",
                  "description": "The product for the line item"
                },
                "productOption": {
                  "type": "object",
                  "description": "The product option for the line item."
                },
                "finalTotal": {
                  "type": "number",
                  "description": "The total in cents for this line item"
                }
              }
            }
          }
        },
        "example": {
          "data": {
            "createdAt": "2024-12-12T07:53:37.793Z",
            "expectedAt": "2024-12-25",
            "finalTotal": 71225,
            "id": 6741,
            "inventoryVendor": {
              "id": 308,
              "organizationId": 25,
              "name": "Awesome Distribution, Inc.",
              "phone": null,
              "notes": null,
              "createdAt": "2024-12-12T07:53:37.776Z",
              "updatedAt": "2024-12-12T07:53:37.776Z",
              "archivedAt": null,
              "email": null,
              "sellerPermitNumber": null,
              "street1": null,
              "street2": null,
              "city": null,
              "state": null,
              "postalCode": null
            },
            "inventoryVendorId": 308,
            "lineItems": [
              {
                "amount": "35",
                "caExcisePerUnit": "0",
                "costPerUnit": "20.35",
                "createdAt": "2024-12-12T07:53:37.797Z",
                "finalTotal": 71225,
                "id": 33555,
                "product": {
                  "id": 11867,
                  "organizationId": 25,
                  "brand": {
                    "id": 2238,
                    "name": "Awesome Cannabis",
                    "createdAt": "2024-12-12T03:08:58.012Z",
                    "updatedAt": "2024-12-12T03:08:58.012Z",
                    "description": null
                  },
                  "inventoryType": "option",
                  "createdAt": "2024-12-12T04:08:00.429Z",
                  "updatedAt": "2024-12-12T05:06:35.447Z",
                  "deletedAt": null,
                  "description": null,
                  "isActive": false,
                  "isFeatured": false,
                  "name": "Blue Dream",
                  "strainType": "hybrid-sativa",
                  "isCompliant": false,
                  "unit": "gram"
                },
                "productId": 11867,
                "productOption": {
                  "id": 15472,
                  "name": "Eighth",
                  "amount": 3.5,
                  "price": 4700,
                  "salesPrice": null,
                  "createdAt": "2024-12-12T04:08:00.433Z",
                  "updatedAt": "2024-12-12T07:09:11.770Z",
                  "upc": null,
                  "content": "3.5"
                },
                "productOptionId": 15472,
                "subtotal": 71225,
                "updatedAt": "2024-12-12T07:53:37.797Z"
              }
            ],
            "organizationId": 25,
            "paymentTermsDueDate": null,
            "shippingHandlingFee": 0,
            "status": "open",
            "subtotal": 71225,
            "totalAmount": "35",
            "updatedAt": "2024-12-12T07:53:37.812Z"
          }
        }
      },
      "QueueEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id of the customer"
          },
          "email": {
            "type": "string",
            "description": "The email of the customer",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the customer"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the customer"
          },
          "phone": {
            "type": "string",
            "description": "The phone of the customer",
            "nullable": true
          },
          "hashId": {
            "type": "string",
            "description": "An ID used to display to the customer and dispensary instead of the `id` number"
          },
          "birthday": {
            "type": "string",
            "description": "The birthday of the customer in `YYYY-MM-DD` format",
            "nullable": true
          },
          "isFirstTime": {
            "type": "boolean",
            "description": "Whether this is the first time a customer is in the store"
          }
        }
      }
    },
    "securitySchemes": {
      "meadowConsumer": {
        "type": "apiKey",
        "name": "X-Consumer-Key",
        "description": "The key assigned to your company and provided via Meadow",
        "in": "header"
      },
      "meadowClient": {
        "type": "apiKey",
        "name": "X-Client-Key",
        "description": "The key generated and provided by our mutual client",
        "in": "header"
      }
    }
  }
}
